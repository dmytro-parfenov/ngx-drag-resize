var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Boundary.html",[0,0.228,1,1.075]],["body/interfaces/Boundary.html",[0,0.268,1,1.614,2,0.929,3,0.668,4,0.668,5,0.668,6,3.078,7,0.452,8,1.013,9,3.017,10,3.017,11,3.017,12,3.017,13,2.865,14,0.993,15,0.056,16,0.555,17,0.045,18,0.045]],["title/interfaces/Movement.html",[0,0.228,19,1.728]],["body/interfaces/Movement.html",[0,0.252,1,1.834,2,0.875,3,0.629,4,0.629,5,0.629,7,0.425,8,0.974,14,0.971,15,0.056,16,0.522,17,0.043,18,0.043,19,2.496,20,2.898,21,1.807,22,2.273,23,2.949,24,3.555,25,1.553,26,2.135,27,3.555,28,3.352,29,2.354,30,1.144,31,1.91,32,1.91,33,1.617]],["title/interfaces/MovementBase.html",[0,0.228,34,1.728]],["body/interfaces/MovementBase.html",[0,0.272,2,0.943,3,0.677,4,0.677,5,0.677,7,0.458,8,1.022,14,0.862,15,0.057,16,0.563,17,0.045,18,0.045,21,1.897,22,2.318,23,3.034,26,2.196,30,0.943,31,2.058,32,2.058,34,2.62,35,2.481,36,2.481,37,3.474,38,3.474]],["title/interfaces/NgxDrag.html",[0,0.228,39,1.728]],["body/interfaces/NgxDrag.html",[0,0.293,1,1.856,2,1.017,3,0.731,4,0.731,5,0.731,7,0.494,8,1.072,14,0.731,15,0.055,16,0.607,17,0.047,18,0.047,21,1.989,25,1.709,26,2.257,29,2.525,30,1.017,33,1.879,39,2.747,40,3.368]],["title/directives/NgxDragDirective.html",[41,1.075,42,1.463]],["body/directives/NgxDragDirective.html",[1,0.816,3,0.149,4,0.149,5,0.149,7,0.101,9,0.802,10,2.404,11,0.802,12,2.404,13,0.679,14,0.548,15,0.06,16,0.124,17,0.014,18,0.014,19,0.802,21,0.581,22,0.581,23,0.802,24,0.544,25,0.499,26,0.327,27,0.967,28,2.174,29,1.111,30,1.101,31,1.924,32,0.802,33,0.382,34,0.451,39,1.083,41,0.816,42,0.679,43,0.327,44,0.685,45,0.382,46,0.802,47,1.527,48,0.581,49,1.596,50,0.967,51,1.41,52,0.802,53,0.802,54,0.802,55,1.643,56,0.802,57,1.643,58,1.083,59,0.451,60,1.111,61,1.217,62,1.582,63,0.967,64,1.991,65,1.643,66,1.643,67,1.643,68,1.217,69,1.991,70,1.217,71,2.919,72,2.174,73,1.217,74,2.527,75,2.029,76,1.643,77,1.643,78,2.919,79,1.812,80,1.643,81,0.685,82,2.007,83,1.665,84,1.217,85,0.685,86,1.217,87,1.217,88,1.812,89,1.665,90,0.685,91,1.217,92,1.305,93,2.174,94,0.685,95,1.217,96,1.643,97,1.991,98,1.217,99,1.217,100,2.007,101,1.991,102,1.217,103,1.217,104,0.967,105,1.217,106,1.643,107,0.685,108,2.281,109,1.643,110,1.217,111,1.217,112,0.685,113,0.581,114,1.217,115,1.217,116,1.643,117,1.217,118,1.217,119,2.029,120,0.685,121,0.802,122,0.451,123,1.812,124,1.217,125,0.451,126,0.685,127,0.382,128,1.643,129,0.685,130,0.685,131,0.685,132,0.685,133,0.685,134,0.451,135,0.382,136,0.685,137,0.685,138,1.217,139,0.685,140,1.217,141,0.685,142,0.685,143,0.382,144,0.382,145,0.382,146,0.451,147,0.685,148,0.382,149,2.278,150,1.504,151,0.451,152,0.685,153,0.685,154,0.685,155,0.685,156,0.451,157,0.451,158,1.217,159,1.582,160,0.685,161,0.685,162,0.685,163,1.643,164,0.544,165,0.685,166,0.685,167,0.685,168,0.685,169,0.685,170,0.802,171,0.685,172,0.451,173,1.804,174,0.544,175,0.451,176,0.685,177,1.643,178,0.685,179,0.685,180,0.685,181,1.643,182,2.281,183,1.643,184,0.685,185,0.685,186,0.685,187,0.685,188,0.685,189,0.685,190,0.685,191,1.643,192,0.685,193,1.643,194,1.217,195,1.643,196,0.685,197,2.281,198,1.217,199,1.217,200,0.685,201,0.685,202,0.685,203,0.685,204,0.685,205,0.685,206,0.544,207,0.685,208,0.685,209,1.217,210,1.643,211,1.217,212,1.643,213,1.217,214,0.685,215,0.685,216,0.685,217,0.685,218,1.217,219,0.685,220,0.685,221,0.685,222,0.685,223,0.685,224,0.685,225,1.217,226,1.217,227,0.685,228,0.685,229,0.685,230,1.217,231,0.685,232,0.685,233,0.685,234,1.217,235,1.217,236,1.991,237,0.802,238,0.802,239,0.685,240,0.685,241,0.685,242,1.991,243,1.217,244,1.217,245,1.217,246,1.217,247,1.217,248,1.217,249,0.685,250,0.685,251,0.685,252,0.451,253,0.685,254,0.685,255,0.685,256,0.685]],["title/directives/NgxDragHandleDirective.html",[41,1.075,257,1.728]],["body/directives/NgxDragHandleDirective.html",[3,0.464,4,0.464,5,0.464,15,0.06,16,0.385,17,0.035,18,0.035,25,0.876,30,1.086,41,1.613,42,2.195,43,1.02,45,1.192,46,2.025,48,1.466,49,1.989,51,1.714,52,2.025,53,2.025,54,2.025,56,2.025,58,2.371,59,1.408,60,1.714,62,1.698,75,2.025,113,1.466,119,2.371,121,2.025,122,1.408,125,1.408,127,1.192,134,1.408,135,1.192,143,1.192,144,1.192,145,1.192,146,1.408,148,1.192,149,2.593,150,2.371,151,1.408,156,1.408,157,1.408,159,1.698,164,1.698,170,2.025,172,1.408,173,1.408,174,2.441,175,1.408,252,2.025,257,2.025,258,2.137,259,1.698,260,2.441,261,2.858,262,3.073,263,2.137,264,2.137,265,2.137,266,1.698,267,1.698,268,1.698,269,2.137,270,2.137,271,2.137]],["title/interfaces/NgxResize.html",[0,0.228,272,2.083]],["body/interfaces/NgxResize.html",[0,0.293,1,1.856,2,1.017,3,0.731,4,0.731,5,0.731,7,0.494,8,1.072,14,0.731,15,0.055,16,0.607,17,0.047,18,0.047,21,1.989,25,1.709,26,2.257,29,2.525,30,1.017,33,1.879,272,3.311,273,3.368]],["title/directives/NgxResizeHandleDirective.html",[41,1.075,274,1.728]],["body/directives/NgxResizeHandleDirective.html",[3,0.401,4,0.401,5,0.401,7,0.271,14,0.718,15,0.059,16,0.333,17,0.031,18,0.031,25,0.758,30,1.108,41,1.505,43,0.882,45,1.031,46,1.821,47,1.541,48,1.751,49,1.967,51,1.541,52,1.821,53,1.821,54,1.821,56,1.821,58,2.18,59,1.218,60,1.541,63,2.195,72,1.468,79,2.195,82,1.468,83,1.218,89,2.419,113,1.751,119,1.821,121,1.821,122,1.218,123,1.468,125,1.218,127,1.031,134,1.218,135,1.031,143,1.031,144,1.031,145,1.031,146,1.218,148,1.031,149,2.18,150,2.18,151,1.218,156,1.218,157,1.218,170,1.821,172,1.218,173,1.821,175,1.218,252,1.218,259,1.468,260,2.195,261,2.628,266,1.468,267,1.468,268,2.195,274,1.821,275,2.195,276,2.763,277,2.763,278,2.628,279,3.671,280,2.628,281,1.848,282,2.763,283,2.763,284,2.763,285,2.763,286,1.848,287,1.821,288,1.848,289,1.848,290,1.848,291,1.848,292,1.848,293,1.848,294,1.218,295,2.763,296,1.848,297,1.848]],["title/interfaces/PositionBase.html",[0,0.228,22,1.251]],["body/interfaces/PositionBase.html",[0,0.292,2,1.012,3,0.727,4,0.727,5,0.727,7,0.492,8,1.069,13,2.759,14,0.901,15,0.056,16,0.604,17,0.047,18,0.047,22,1.982,36,2.662,237,3.112,238,3.112,298,3.351]],["title/interfaces/Scale.html",[0,0.228,299,2.083]],["body/interfaces/Scale.html",[0,0.308,2,1.067,3,0.767,4,0.767,5,0.767,7,0.519,8,1.104,13,2.58,14,0.767,15,0.056,16,0.637,17,0.049,18,0.049,299,3.411,300,3.535,301,4.81]],["title/changelog.html",[302,1.753,303,1.753,304,1.753]],["body/changelog.html",[15,0.044,17,0.044,18,0.044,51,1.654,127,1.654,135,1.654,206,3.929,304,2.355,305,2.355,306,4.677,307,2.812,308,2.965,309,2.965,310,4.514,311,2.965,312,2.965,313,3.844,314,2.965,315,2.965,316,2.965,317,2.965,318,2.965,319,2.965,320,2.965,321,2.965,322,2.965,323,3.844,324,2.965,325,2.965,326,2.965,327,2.965,328,3.389,329,2.965,330,2.965,331,2.965,332,2.355,333,2.965,334,2.965,335,2.965,336,2.965,337,2.965]],["title/miscellaneous/enumerations.html",[338,1.231,339,2.498]],["body/miscellaneous/enumerations.html",[7,0.458,9,3.034,10,3.034,11,3.034,12,3.034,15,0.058,17,0.045,18,0.045,83,3.294,113,1.897,275,2.481,280,3.158,338,1.742,339,2.481,340,3.123,341,3.975,342,3.123,343,3.123,344,3.123,345,3.123]],["title/index.html",[7,0.324,302,1.753,303,1.753]],["body/index.html",[15,0.052,16,0.433,17,0.038,18,0.038,30,0.725,42,1.861,43,1.592,47,2.671,48,1.145,49,1.145,50,1.907,60,1.339,75,1.582,100,1.907,113,1.592,148,1.339,257,2.198,274,2.198,278,2.65,287,3.155,294,2.87,307,1.582,328,1.907,332,1.907,346,1.907,347,1.907,348,1.907,349,2.65,350,1.907,351,3.336,352,3.336,353,3.336,354,2.4,355,3.336,356,2.4,357,2.4,358,2.4,359,3.336,360,3.336,361,2.4,362,4.354,363,3.336,364,2.4,365,2.4,366,2.4,367,2.4,368,2.4,369,2.4,370,2.4,371,2.4,372,3.336,373,2.4,374,2.4,375,2.4,376,2.4,377,3.336,378,2.4,379,2.4,380,2.4,381,2.4,382,2.4,383,2.4,384,2.4,385,2.4,386,2.4,387,2.4,388,2.4]],["title/modules.html",[389,2.816]],["body/modules.html",[15,0.053,17,0.053,18,0.053,389,3.195]],["title/overview.html",[390,2.816]],["body/overview.html",[2,1.185,15,0.052,17,0.052,18,0.052,43,1.872,390,3.117,391,3.923,392,3.923]],["title/properties.html",[8,0.809,393,2.207]],["body/properties.html",[8,0.803,15,0.058,17,0.045,18,0.045,45,1.742,47,2.652,48,1.49,49,1.49,143,1.742,144,1.742,145,1.742,287,2.882,294,2.058,305,2.481,307,2.62,346,2.481,347,2.481,348,2.481,349,2.481,350,2.481,394,3.123,395,3.123,396,3.123,397,3.123,398,3.123,399,3.123,400,3.975,401,3.975,402,3.123,403,3.123,404,3.123,405,3.123,406,3.123]],["title/miscellaneous/typealiases.html",[338,1.231,407,3.145]],["body/miscellaneous/typealiases.html",[7,0.474,14,0.701,15,0.056,17,0.046,18,0.046,35,2.568,37,2.568,38,2.568,88,3.228,89,2.131,92,3.228,93,2.568,104,2.568,237,2.131,238,2.131,338,1.804,408,3.233,409,3.233,410,4.063,411,3.233,412,4.063,413,4.063,414,4.063,415,4.063,416,4.063,417,3.233,418,3.233,419,3.233,420,3.233,421,3.233]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":177,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["0.0.2",{"_index":334,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":331,"title":{},"body":{"changelog.html":{}}}],["0.0.4",{"_index":330,"title":{},"body":{"changelog.html":{}}}],["0.0.5",{"_index":329,"title":{},"body":{"changelog.html":{}}}],["0.0.6",{"_index":327,"title":{},"body":{"changelog.html":{}}}],["1.0.0",{"_index":324,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":321,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":318,"title":{},"body":{"changelog.html":{}}}],["1.0.3",{"_index":317,"title":{},"body":{"changelog.html":{}}}],["19.0.0",{"_index":323,"title":{},"body":{"changelog.html":{}}}],["2.0.0",{"_index":312,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":311,"title":{},"body":{"changelog.html":{}}}],["2.0.2",{"_index":309,"title":{},"body":{"changelog.html":{}}}],["2.8.1",{"_index":320,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":305,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["4",{"_index":391,"title":{},"body":{"overview.html":{}}}],["7",{"_index":392,"title":{},"body":{"overview.html":{}}}],["absolute",{"_index":421,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["accessors",{"_index":70,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["add",{"_index":356,"title":{},"body":{"index.html":{}}}],["added",{"_index":335,"title":{},"body":{"changelog.html":{}}}],["affect",{"_index":284,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["afterviewinit",{"_index":261,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["aliases",{"_index":408,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":46,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["angular",{"_index":307,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["angular/common",{"_index":135,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"changelog.html":{}}}],["angular/core",{"_index":127,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"changelog.html":{}}}],["app",{"_index":363,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":366,"title":{},"body":{"index.html":{}}}],["app.component.scss",{"_index":368,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":369,"title":{},"body":{"index.html":{}}}],["attribute",{"_index":282,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["author",{"_index":143,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"properties.html":{}}}],["axis",{"_index":88,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/typealiases.html":{}}}],["base",{"_index":32,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{}}}],["base.ts",{"_index":36,"title":{},"body":{"interfaces/MovementBase.html":{},"interfaces/PositionBase.html":{}}}],["boolean",{"_index":81,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["borders",{"_index":383,"title":{},"body":{"index.html":{}}}],["bottom",{"_index":9,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"miscellaneous/enumerations.html":{}}}],["bottomleft",{"_index":345,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bottomright",{"_index":344,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["boundary",{"_index":1,"title":{"interfaces/Boundary.html":{}},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["boundarydirective",{"_index":55,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect",{"_index":218,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect.bottom",{"_index":231,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect.left",{"_index":226,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect.right",{"_index":227,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect.top",{"_index":230,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["bugs",{"_index":399,"title":{},"body":{"properties.html":{}}}],["calculation",{"_index":215,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["changed",{"_index":165,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["changelog",{"_index":304,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":109,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["changing",{"_index":97,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["class",{"_index":148,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["compiler",{"_index":53,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["component",{"_index":359,"title":{},"body":{"index.html":{}}}],["components",{"_index":314,"title":{},"body":{"changelog.html":{}}}],["const",{"_index":197,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["constrain",{"_index":74,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/axis",{"_index":137,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/drag.service",{"_index":139,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/movement/movement",{"_index":140,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/position",{"_index":141,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/window.token",{"_index":142,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["css",{"_index":76,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["default",{"_index":82,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["define",{"_index":79,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["defined",{"_index":72,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["delta",{"_index":301,"title":{},"body":{"interfaces/Scale.html":{}}}],["demo",{"_index":351,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":310,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":45,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"properties.html":{}}}],["desired",{"_index":385,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":162,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["destroyed",{"_index":161,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["devices",{"_index":381,"title":{},"body":{"index.html":{}}}],["directive",{"_index":41,"title":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["directive({selector",{"_index":147,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["directives",{"_index":43,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{},"overview.html":{}}}],["disable",{"_index":86,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["dmytro",{"_index":144,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"properties.html":{}}}],["docs",{"_index":328,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["documentation",{"_index":332,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["drag",{"_index":47,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{},"properties.html":{}}}],["drag.directive",{"_index":263,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["dragdirective",{"_index":264,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["dragged",{"_index":110,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["dragging",{"_index":75,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"index.html":{}}}],["dragservice",{"_index":138,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["during",{"_index":285,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["dynamic",{"_index":146,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["element",{"_index":49,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{},"properties.html":{}}}],["elementref",{"_index":121,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["elements",{"_index":384,"title":{},"body":{"index.html":{}}}],["emitdrag(nativeevent",{"_index":253,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["emits",{"_index":108,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ensure",{"_index":358,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":339,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eslint",{"_index":326,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":29,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["event.initial",{"_index":194,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.initial.x",{"_index":191,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.initial.y",{"_index":193,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.nativeevent.preventdefault",{"_index":188,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.offsetfromhost.left",{"_index":221,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.offsetfromhost.top",{"_index":223,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.x",{"_index":220,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.y",{"_index":222,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["eventemitter",{"_index":106,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["eventinitial",{"_index":183,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["eventinitial.x",{"_index":190,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["eventinitial.y",{"_index":192,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["events",{"_index":87,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["example",{"_index":362,"title":{},"body":{"index.html":{}}}],["examples",{"_index":388,"title":{},"body":{"index.html":{}}}],["existing",{"_index":315,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":16,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"index.html":{}}}],["extends",{"_index":21,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["false",{"_index":84,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["find",{"_index":386,"title":{},"body":{"index.html":{}}}],["fingers",{"_index":379,"title":{},"body":{"index.html":{}}}],["fixed",{"_index":420,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["free",{"_index":93,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/typealiases.html":{}}}],["fromelement(target",{"_index":185,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["function/translate3d",{"_index":103,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["functionality",{"_index":350,"title":{},"body":{"index.html":{},"properties.html":{}}}],["getting",{"_index":302,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["handle",{"_index":113,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["handle.directive.ts",{"_index":259,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["handle.directive.ts:25",{"_index":281,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["homepage",{"_index":396,"title":{},"body":{"properties.html":{}}}],["host",{"_index":159,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{}}}],["hostbinding",{"_index":286,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["hostbinding('attr.data",{"_index":293,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["hostelementrect",{"_index":181,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.bottom",{"_index":200,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.height",{"_index":232,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.left",{"_index":199,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.right",{"_index":201,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.top",{"_index":198,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.width",{"_index":228,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrectinitial",{"_index":160,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["html",{"_index":48,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{},"properties.html":{}}}],["htmlelement",{"_index":28,"title":{},"body":{"interfaces/Movement.html":{},"directives/NgxDragDirective.html":{}}}],["https://angular.io/guide/angular",{"_index":52,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["https://developer.mozilla.org/en",{"_index":101,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["https://dmytro",{"_index":397,"title":{},"body":{"properties.html":{}}}],["https://github.com/dmytro",{"_index":400,"title":{},"body":{"properties.html":{}}}],["implements",{"_index":56,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["import",{"_index":30,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["imports",{"_index":360,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["inheritdoc",{"_index":170,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["initial",{"_index":23,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{}}}],["initiator",{"_index":24,"title":{},"body":{"interfaces/Movement.html":{},"directives/NgxDragDirective.html":{}}}],["inject",{"_index":122,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["inject(dragservice",{"_index":154,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["inject(ngxdragdirective",{"_index":265,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["inject(ngxresizedirective",{"_index":291,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["inject(platform_id",{"_index":157,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["inject(renderer2",{"_index":153,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["inject(window",{"_index":155,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["inject>(elementref",{"_index":151,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["input",{"_index":123,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["input('ngxresizehandle",{"_index":292,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["inputs",{"_index":63,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["install",{"_index":352,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"interfaces/NgxResize.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"interfaces/NgxResize.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"interfaces/NgxResize.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"overview.html":{}}}],["isplatformserver",{"_index":134,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["isplatformserver(this.platformid",{"_index":172,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["keywords",{"_index":395,"title":{},"body":{"properties.html":{}}}],["left",{"_index":10,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"miscellaneous/enumerations.html":{}}}],["left')}px",{"_index":248,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["library",{"_index":346,"title":{},"body":{"index.html":{},"properties.html":{}}}],["license",{"_index":403,"title":{},"body":{"properties.html":{}}}],["link",{"_index":252,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["locks",{"_index":91,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["map",{"_index":130,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["map((event",{"_index":189,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["mark",{"_index":260,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["matching",{"_index":18,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["math.max(boundaryrect.left",{"_index":224,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["math.max(boundaryrect.top",{"_index":229,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["math.min",{"_index":225,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["meinitiates",{"_index":373,"title":{},"body":{"index.html":{}}}],["meresize",{"_index":382,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":59,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["methods",{"_index":61,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["migrate",{"_index":306,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":338,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":404,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":389,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":387,"title":{},"body":{"index.html":{}}}],["mouseevent",{"_index":37,"title":{},"body":{"interfaces/MovementBase.html":{},"miscellaneous/typealiases.html":{}}}],["movement",{"_index":19,"title":{"interfaces/Movement.html":{}},"body":{"interfaces/Movement.html":{},"directives/NgxDragDirective.html":{}}}],["movementbase",{"_index":34,"title":{"interfaces/MovementBase.html":{}},"body":{"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{}}}],["movementnative",{"_index":410,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["name",{"_index":115,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["native.ts",{"_index":412,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nativeevent",{"_index":26,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["new",{"_index":163,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngafterviewinit",{"_index":267,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["ngondestroy",{"_index":175,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["ngoninit",{"_index":171,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngx",{"_index":294,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{},"index.html":{},"properties.html":{}}}],["ngxdrag",{"_index":39,"title":{"interfaces/NgxDrag.html":{}},"body":{"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{}}}],["ngxdragboundary",{"_index":64,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragboundary(boundary",{"_index":168,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragdirective",{"_index":42,"title":{"directives/NgxDragDirective.html":{}},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"index.html":{}}}],["ngxdragdisabled",{"_index":65,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragged",{"_index":69,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdraghandle",{"_index":262,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["ngxdraghandledirective",{"_index":257,"title":{"directives/NgxDragHandleDirective.html":{}},"body":{"directives/NgxDragHandleDirective.html":{},"index.html":{}}}],["ngxdraglockaxis",{"_index":66,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragpositionstrategy",{"_index":67,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxresize",{"_index":272,"title":{"interfaces/NgxResize.html":{}},"body":{"interfaces/NgxResize.html":{}}}],["ngxresizedirective",{"_index":278,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["ngxresizehandle",{"_index":279,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["ngxresizehandledirective",{"_index":274,"title":{"directives/NgxResizeHandleDirective.html":{}},"body":{"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["ngxresizehandletype",{"_index":280,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{},"miscellaneous/enumerations.html":{}}}],["npm",{"_index":353,"title":{},"body":{"index.html":{}}}],["null",{"_index":89,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":13,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["object",{"_index":80,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["observable",{"_index":164,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{}}}],["observabletargetchange",{"_index":166,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["observe",{"_index":62,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{}}}],["observe(target",{"_index":111,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["offsetfromhost",{"_index":27,"title":{},"body":{"interfaces/Movement.html":{},"directives/NgxDragDirective.html":{}}}],["ondestroy",{"_index":58,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["ondrag(event",{"_index":216,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["one",{"_index":276,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["oninit",{"_index":57,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["opportunity",{"_index":348,"title":{},"body":{"index.html":{},"properties.html":{}}}],["optional",{"_index":25,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["options#strictmetadataemit",{"_index":54,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["output",{"_index":124,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["outputs",{"_index":68,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["overview",{"_index":390,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":393,"title":{"properties.html":{}},"body":{}}],["page",{"_index":50,"title":{},"body":{"directives/NgxDragDirective.html":{},"index.html":{}}}],["parameters",{"_index":114,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["parfenov",{"_index":145,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"properties.html":{}}}],["parfenov.github.io/ngx",{"_index":398,"title":{},"body":{"properties.html":{}}}],["parfenov/ngx",{"_index":401,"title":{},"body":{"properties.html":{}}}],["peerdependencies",{"_index":322,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":186,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["platform_id",{"_index":125,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["platformid",{"_index":156,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["point",{"_index":269,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["position",{"_index":31,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{}}}],["positionbase",{"_index":22,"title":{"interfaces/PositionBase.html":{}},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{},"interfaces/PositionBase.html":{}}}],["positioning",{"_index":95,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["positionstrategy",{"_index":92,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/typealiases.html":{}}}],["positiontype",{"_index":415,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["private",{"_index":149,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["project",{"_index":316,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"interfaces/NgxResize.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"properties.html":{}}}],["provides",{"_index":347,"title":{},"body":{"index.html":{},"properties.html":{}}}],["put",{"_index":77,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["readonly",{"_index":150,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["rect",{"_index":209,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rect.bottom",{"_index":256,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rect.left",{"_index":211,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rect.right",{"_index":255,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rect.top",{"_index":213,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["relative",{"_index":104,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/typealiases.html":{}}}],["renderer",{"_index":152,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["renderer2",{"_index":126,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["repository",{"_index":405,"title":{},"body":{"properties.html":{}}}],["required",{"_index":361,"title":{},"body":{"index.html":{}}}],["resize",{"_index":287,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{},"index.html":{},"properties.html":{}}}],["resize.directive",{"_index":289,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["resize.git",{"_index":406,"title":{},"body":{"properties.html":{}}}],["resize/issues",{"_index":402,"title":{},"body":{"properties.html":{}}}],["resizedirective",{"_index":290,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["resizing",{"_index":277,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["results",{"_index":17,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":173,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["returns",{"_index":118,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["right",{"_index":11,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"miscellaneous/enumerations.html":{}}}],["root",{"_index":364,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":129,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rxjs/operators",{"_index":133,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["save",{"_index":354,"title":{},"body":{"index.html":{}}}],["scale",{"_index":299,"title":{"interfaces/Scale.html":{}},"body":{"interfaces/Scale.html":{}}}],["scrolling",{"_index":376,"title":{},"body":{"index.html":{}}}],["see",{"_index":51,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"changelog.html":{}}}],["selector",{"_index":60,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["set",{"_index":167,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["setngxdragboundary(boundary",{"_index":120,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["sets",{"_index":268,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["shared/boundary/boundary",{"_index":33,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["shared/boundary/boundary.directive",{"_index":136,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["side",{"_index":283,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["simple",{"_index":372,"title":{},"body":{"index.html":{}}}],["size",{"_index":158,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["src/.../axis.ts",{"_index":409,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../movement",{"_index":411,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../position",{"_index":413,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../resize",{"_index":340,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/lib/core/axis.ts",{"_index":417,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/core/movement/movement",{"_index":35,"title":{},"body":{"interfaces/MovementBase.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/core/movement/movement.ts",{"_index":20,"title":{},"body":{"interfaces/Movement.html":{}}}],["src/lib/core/position",{"_index":298,"title":{},"body":{"interfaces/PositionBase.html":{}}}],["src/lib/drag/drag",{"_index":258,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["src/lib/drag/drag.directive.ts",{"_index":44,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:122",{"_index":112,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:73",{"_index":94,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:78",{"_index":90,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:83",{"_index":85,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:90",{"_index":73,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:97",{"_index":107,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.ts",{"_index":40,"title":{},"body":{"interfaces/NgxDrag.html":{}}}],["src/lib/drag/position",{"_index":418,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/resize/position",{"_index":419,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/resize/resize",{"_index":275,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{},"miscellaneous/enumerations.html":{}}}],["src/lib/resize/resize.ts",{"_index":273,"title":{},"body":{"interfaces/NgxResize.html":{}}}],["src/lib/resize/scale.ts",{"_index":300,"title":{},"body":{"interfaces/Scale.html":{}}}],["src/lib/shared/boundary/boundary.ts",{"_index":6,"title":{},"body":{"interfaces/Boundary.html":{}}}],["standalone",{"_index":313,"title":{},"body":{"changelog.html":{}}}],["started",{"_index":303,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["starts",{"_index":214,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["strategy",{"_index":96,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["strategy.ts",{"_index":414,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["string",{"_index":71,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["style",{"_index":100,"title":{},"body":{"directives/NgxDragDirective.html":{},"index.html":{}}}],["styleurls",{"_index":367,"title":{},"body":{"index.html":{}}}],["subject",{"_index":128,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["subscribe",{"_index":205,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["takeuntil",{"_index":131,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["takeuntil(this.destroy",{"_index":203,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["takeuntil(this.observabletargetchange",{"_index":204,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["tap",{"_index":132,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["tap((event",{"_index":187,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["tap(this.ondrag.bind(this",{"_index":202,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["target",{"_index":116,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["template",{"_index":371,"title":{},"body":{"index.html":{}}}],["templateurl",{"_index":365,"title":{},"body":{"index.html":{}}}],["tests",{"_index":337,"title":{},"body":{"changelog.html":{}}}],["this.basedonboundary(left",{"_index":247,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.basedonboundary(top",{"_index":244,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.boundary",{"_index":169,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.destroy$.complete",{"_index":178,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.destroy$.next(void",{"_index":176,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.dragdirective",{"_index":270,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["this.dragdirective.observe(this.elementref.nativeelement",{"_index":271,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["this.dragservice",{"_index":184,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.elementref.nativeelement",{"_index":117,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.elementref.nativeelement.getboundingclientrect",{"_index":182,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.emitdrag(event.nativeevent",{"_index":242,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.getboundary",{"_index":219,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.hostelementrectinitial",{"_index":195,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.hostelementrectinitial.left",{"_index":234,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.hostelementrectinitial.top",{"_index":235,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.ngxdragdisabled",{"_index":217,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.ngxdragged.emit",{"_index":254,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.ngxdraglockaxis",{"_index":236,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.ngxdragpositionstrategy",{"_index":233,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.observabletargetchange$.complete",{"_index":179,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.observabletargetchange$.next(void",{"_index":180,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.observe",{"_index":174,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{}}}],["this.renderer.setstyle(this.elementref.nativeelement",{"_index":251,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.resizedirective",{"_index":295,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["this.resizedirective.observe(this.elementref.nativeelement",{"_index":296,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["this.resizedirective.unsubscribe(this.elementref.nativeelement",{"_index":297,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["this.updatehoststyle('left",{"_index":246,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.updatehoststyle('top",{"_index":243,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.updatehoststyle('transform",{"_index":239,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.updateinitialrect",{"_index":196,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.window",{"_index":208,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.window.scrollx",{"_index":210,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.window.scrolly",{"_index":212,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["top",{"_index":12,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"miscellaneous/enumerations.html":{}}}],["top')}px",{"_index":245,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["topleft",{"_index":342,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["topright",{"_index":343,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["top}px",{"_index":241,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["touch",{"_index":380,"title":{},"body":{"index.html":{}}}],["touchevent",{"_index":38,"title":{},"body":{"interfaces/MovementBase.html":{},"miscellaneous/typealiases.html":{}}}],["transform",{"_index":98,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["translate3d",{"_index":99,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["translate3d(${left}px",{"_index":240,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["true",{"_index":266,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["tslib",{"_index":319,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":378,"title":{},"body":{"index.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"miscellaneous/typealiases.html":{}}}],["type.enum",{"_index":288,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["type.enum.ts",{"_index":341,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.ts",{"_index":416,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":407,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typos",{"_index":333,"title":{},"body":{"changelog.html":{}}}],["unit",{"_index":336,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":206,"title":{},"body":{"directives/NgxDragDirective.html":{},"changelog.html":{}}}],["updatehoststyle(style",{"_index":250,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["updateinitialrect",{"_index":207,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["updates",{"_index":249,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["us/docs/web/css/position",{"_index":105,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["us/docs/web/css/transform",{"_index":102,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["usage",{"_index":357,"title":{},"body":{"index.html":{}}}],["use",{"_index":349,"title":{},"body":{"index.html":{},"properties.html":{}}}],["using",{"_index":377,"title":{},"body":{"index.html":{}}}],["v19",{"_index":325,"title":{},"body":{"changelog.html":{}}}],["v20",{"_index":308,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":83,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"miscellaneous/enumerations.html":{}}}],["version",{"_index":394,"title":{},"body":{"properties.html":{}}}],["via",{"_index":375,"title":{},"body":{"index.html":{}}}],["void",{"_index":119,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["window",{"_index":78,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["within",{"_index":370,"title":{},"body":{"index.html":{}}}],["works",{"_index":374,"title":{},"body":{"index.html":{}}}],["x",{"_index":238,"title":{},"body":{"directives/NgxDragDirective.html":{},"interfaces/PositionBase.html":{},"miscellaneous/typealiases.html":{}}}],["y",{"_index":237,"title":{},"body":{"directives/NgxDragDirective.html":{},"interfaces/PositionBase.html":{},"miscellaneous/typealiases.html":{}}}],["yarn",{"_index":355,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Boundary.html":{"url":"interfaces/Boundary.html","title":"interface - Boundary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Boundary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/shared/boundary/boundary.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bottom\n                                        \n                                \n                                \n                                        \n                                            left\n                                        \n                                \n                                \n                                        \n                                            right\n                                        \n                                \n                                \n                                        \n                                            top\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bottom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        left:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        right:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        top:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Boundary {\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Movement.html":{"url":"interfaces/Movement.html","title":"interface - Movement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Movement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/core/movement/movement.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PositionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            initial\n                                        \n                                \n                                \n                                        \n                                            initiator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nativeEvent\n                                        \n                                \n                                \n                                        \n                                            offsetFromHost\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initial:         PositionBase\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PositionBase\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initiator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initiator:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nativeEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nativeEvent:     Event\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Event\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offsetFromHost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offsetFromHost:         Boundary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Boundary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {PositionBase} from '../position-base';\nimport {Boundary} from '../../shared/boundary/boundary';\n\nexport interface Movement extends PositionBase {\n  initiator: HTMLElement;\n  offsetFromHost: Boundary;\n  initial: PositionBase;\n  nativeEvent?: Event;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovementBase.html":{"url":"interfaces/MovementBase.html","title":"interface - MovementBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MovementBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/core/movement/movement-base.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PositionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            initial\n                                        \n                                \n                                \n                                        \n                                            nativeEvent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initial:         PositionBase\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PositionBase\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nativeEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nativeEvent:     MouseEvent | TouchEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MouseEvent | TouchEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {PositionBase} from '../position-base';\n\nexport interface MovementBase extends PositionBase {\n  initial: PositionBase;\n  nativeEvent: MouseEvent | TouchEvent;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxDrag.html":{"url":"interfaces/NgxDrag.html","title":"interface - NgxDrag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NgxDrag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/drag/drag.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Boundary\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            nativeEvent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nativeEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nativeEvent:     Event\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Event\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Boundary} from '../shared/boundary/boundary';\n\nexport interface NgxDrag extends Boundary {\n  nativeEvent?: Event;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxDragDirective.html":{"url":"directives/NgxDragDirective.html","title":"directive - NgxDragDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgxDragDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/drag/drag.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                The directive that allows to drag HTML element on page\nSee https://angular.io/guide/angular-compiler-options#strictmetadataemit\n\n            \n\n            \n                Extends\n            \n            \n                            BoundaryDirective\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxDrag]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                observe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngxDragBoundary\n                            \n                            \n                                ngxDragDisabled\n                            \n                            \n                                ngxDragLockAxis\n                            \n                            \n                                ngxDragPositionStrategy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngxDragged\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ngxDragBoundary\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngxDragBoundary\n                    \n                \n                \n                    \n                        Type :     string | HTMLElement\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:90\n                            \n                        \n                \n                    \n                        Constrain for the dragging element.\nCan be as a HTMLElement or CSS selector.\nYou can put 'window' string to define window object as a constrain.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ngxDragDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:83\n                            \n                        \n                \n                    \n                        Disable any drag events\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ngxDragLockAxis\n                    \n                \n                \n                    \n                        Type :         Axis\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:78\n                            \n                        \n                \n                    \n                        Locks axis for the dragging\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ngxDragPositionStrategy\n                    \n                \n                \n                    \n                        Type :         PositionStrategy\n\n                    \n                \n                \n                    \n                        Default value : 'free'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:73\n                            \n                        \n                \n                    \n                        Define positioning strategy.\n'free' - position will changing by 'transform: translate3d()' style\nSee https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/translate3d\n'relative' - position will changing by 'top' and 'left' style\nSee https://developer.mozilla.org/en-US/docs/Web/CSS/position\nDefault is 'free'.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ngxDragged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:97\n                            \n                        \n                \n                    \n                        Emits changes when element was dragged\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        observe\n                        \n                    \n                \n            \n            \n                \nobserve(target)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/drag/drag.directive.ts:122\n                        \n                    \n\n\n            \n                \n                        Observe the element dragging which will be as handle for dragging\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                target\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.elementRef.nativeElement\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ngxDragBoundary\n                    \n                \n\n\n                \n                    \n                        setngxDragBoundary(boundary: string | HTMLElement)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/drag/drag.directive.ts:90\n                                \n                            \n                    \n                        \n                                Constrain for the dragging element.\nCan be as a HTMLElement or CSS selector.\nYou can put 'window' string to define window object as a constrain.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            boundary\n                                                    \n                                                            \n                                                                        string | HTMLElement\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n  Renderer2\n} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {map, takeUntil, tap} from 'rxjs/operators';\nimport {isPlatformServer} from '@angular/common';\nimport {BoundaryDirective} from '../shared/boundary/boundary.directive';\nimport {PositionStrategy} from './position-strategy';\nimport {Axis} from '../core/axis';\nimport {NgxDrag} from './drag';\nimport {DragService} from '../core/drag.service';\nimport {MovementBase} from '../core/movement/movement-base';\nimport {Movement} from '../core/movement/movement';\nimport {Boundary} from '../shared/boundary/boundary';\nimport {PositionBase} from '../core/position-base';\nimport {WINDOW} from '../core/window.token';\n\n/**\n * The directive that allows to drag HTML element on page\n *\n * @author Dmytro Parfenov \n *\n * @dynamic\n * @see https://angular.io/guide/angular-compiler-options#strictmetadataemit\n */\n@Directive({selector: '[ngxDrag]'})\nexport class NgxDragDirective extends BoundaryDirective implements OnInit, OnDestroy {\n  private readonly elementRef = inject>(ElementRef);\n  private readonly renderer = inject(Renderer2);\n  private readonly dragService = inject(DragService);\n  private readonly window = inject(WINDOW);\n  private readonly platformId = inject(PLATFORM_ID);\n\n\n  /**\n   * Initial size and position of host element\n   */\n  private hostElementRectInitial: {\n    left: number;\n    top: number;\n  } | null = null;\n\n  /**\n   * Emits when directive was destroyed\n   */\n  private destroy$ = new Subject();\n\n  /**\n   * Emits when observable target was changed\n   */\n  private observableTargetChange$ = new Subject();\n\n  /**\n   * Define positioning strategy.\n   *\n   * 'free' - position will changing by 'transform: translate3d()' style\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/translate3d\n   *\n   * 'relative' - position will changing by 'top' and 'left' style\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/position\n   *\n   * Default is 'free'.\n   */\n  @Input() ngxDragPositionStrategy: PositionStrategy = 'free';\n\n  /**\n   * Locks axis for the dragging\n   */\n  @Input() ngxDragLockAxis: Axis = null;\n\n  /**\n   * Disable any drag events\n   */\n  @Input() ngxDragDisabled = false;\n\n  /**\n   * Constrain for the dragging element.\n   * Can be as a HTMLElement or CSS selector.\n   * You can put 'window' string to define window object as a constrain.\n   */\n  @Input() set ngxDragBoundary(boundary: string | HTMLElement) {\n    this.boundary = boundary;\n  }\n\n  /**\n   * Emits changes when element was dragged\n   */\n  @Output() ngxDragged = new EventEmitter();\n\n  /**\n   * @inheritDoc\n   */\n  ngOnInit(): void {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n\n    this.observe();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngOnDestroy(): void {\n    this.destroy$.next(void 0);\n    this.destroy$.complete();\n    this.observableTargetChange$.complete();\n  }\n\n  /**\n   * Observe the element dragging which will be as handle for dragging\n   */\n  observe(target = this.elementRef.nativeElement): void {\n    this.observableTargetChange$.next(void 0);\n\n    let hostElementRect = this.elementRef.nativeElement.getBoundingClientRect();\n    let eventInitial: PositionBase | null = null;\n\n    this.dragService\n      .fromElement(target)\n      .pipe(\n        tap((event) => event.nativeEvent.preventDefault()),\n        map((event) => {\n          if (\n            !eventInitial ||\n            eventInitial.x !== event.initial.x ||\n            eventInitial.y !== event.initial.y\n          ) {\n            eventInitial = event.initial;\n            hostElementRect = this.elementRef.nativeElement.getBoundingClientRect();\n\n            if (!this.hostElementRectInitial) {\n              this.updateInitialRect();\n            }\n          }\n\n          const offsetFromHost = {\n            top: event.initial.y - hostElementRect.top,\n            left: event.initial.x - hostElementRect.left,\n            bottom: hostElementRect.bottom - event.initial.y,\n            right: hostElementRect.right - event.initial.x,\n          } as Boundary;\n\n          return {\n            ...event,\n            initiator: target,\n            offsetFromHost,\n            initial: event.initial,\n          };\n        }),\n        tap(this.onDrag.bind(this)),\n        takeUntil(this.destroy$),\n        takeUntil(this.observableTargetChange$)\n      )\n      .subscribe();\n  }\n\n  /**\n   * Update size and position of host element\n   */\n  private updateInitialRect(): void {\n    if (!this.window) {\n      return;\n    }\n\n    const rect = this.elementRef.nativeElement.getBoundingClientRect();\n\n    this.hostElementRectInitial = {\n      left: this.window.scrollX + rect.left,\n      top: this.window.scrollY + rect.top,\n    };\n  }\n\n  /**\n   * Starts the calculation of drag event and changes host position\n   */\n  private onDrag(event: Movement): void {\n    if (this.ngxDragDisabled) {\n      return;\n    }\n\n    const hostElementRect = this.elementRef.nativeElement.getBoundingClientRect();\n    const boundaryRect = this.getBoundary();\n\n    let left = event.x - event.offsetFromHost.left;\n    let top = event.y - event.offsetFromHost.top;\n\n    if (boundaryRect) {\n      left = Math.max(boundaryRect.left, left);\n      left = Math.min(\n        boundaryRect.left + (boundaryRect.right - boundaryRect.left) - hostElementRect.width,\n        left\n      );\n\n      top = Math.max(boundaryRect.top, top);\n      top = Math.min(\n        boundaryRect.top + (boundaryRect.bottom - boundaryRect.top) - hostElementRect.height,\n        top\n      );\n    }\n\n    if (this.ngxDragPositionStrategy === 'free' && this.hostElementRectInitial) {\n      left = left - this.hostElementRectInitial.left + this.window.scrollX;\n      top = top - this.hostElementRectInitial.top + this.window.scrollY;\n\n      if (this.ngxDragLockAxis === 'y') {\n        top = hostElementRect.top - this.hostElementRectInitial.top + this.window.scrollY;\n      }\n\n      if (this.ngxDragLockAxis === 'x') {\n        left = hostElementRect.left - this.hostElementRectInitial.left + this.window.scrollX;\n      }\n\n      this.updateHostStyle('transform', `translate3d(${left}px, ${top}px, 0)`);\n      this.emitDrag(event.nativeEvent);\n      return;\n    }\n\n    if (this.ngxDragLockAxis === 'x') {\n      this.updateHostStyle('top', `${this.basedOnBoundary(top, 'top')}px`);\n      this.emitDrag(event.nativeEvent);\n      return;\n    }\n\n    if (this.ngxDragLockAxis === 'y') {\n      this.updateHostStyle('left', `${this.basedOnBoundary(left, 'left')}px`);\n      this.emitDrag(event.nativeEvent);\n      return;\n    }\n\n    this.updateHostStyle('left', `${this.basedOnBoundary(left, 'left')}px`);\n    this.updateHostStyle('top', `${this.basedOnBoundary(top, 'top')}px`);\n    this.emitDrag(event.nativeEvent);\n  }\n\n  /**\n   * Updates the host style\n   */\n  private updateHostStyle(style: string, value: any): void {\n    this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n  }\n\n  /**\n   * Emits drag event to the {@link ngxDragged}\n   */\n  private emitDrag(nativeEvent?: Event): void {\n    const rect = this.elementRef.nativeElement.getBoundingClientRect();\n\n    this.ngxDragged.emit({\n      nativeEvent,\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxDragHandleDirective.html":{"url":"directives/NgxDragHandleDirective.html","title":"directive - NgxDragHandleDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgxDragHandleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/drag/drag-handle.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                The directive that allows to mark HTML element as handle of dragging element for NgxDragDirective\nSee https://angular.io/guide/angular-compiler-options#strictmetadataemit\n\n            \n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxDragHandle]\n                    \n\n\n\n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, OnDestroy, PLATFORM_ID, inject } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport {NgxDragDirective} from './drag.directive';\n\n/**\n * The directive that allows to mark HTML element as handle of dragging element for {@link NgxDragDirective}\n *\n * @author Dmytro Parfenov \n *\n * @dynamic\n * @see https://angular.io/guide/angular-compiler-options#strictmetadataemit\n */\n@Directive({ selector: '[ngxDragHandle]' })\nexport class NgxDragHandleDirective implements AfterViewInit, OnDestroy {\n  private readonly elementRef = inject>(ElementRef);\n  private readonly dragDirective = inject(NgxDragDirective, { optional: true });\n  private readonly platformId = inject(PLATFORM_ID);\n\n\n  /**\n   * @inheritDoc\n   */\n  ngAfterViewInit(): void {\n    this.observe();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngOnDestroy(): void {\n    this.observe();\n  }\n\n  /**\n   * Sets host element as observable point for {@link NgxDragDirective}\n   */\n  private observe(): void {\n    if (isPlatformServer(this.platformId) || !this.dragDirective) {\n      return;\n    }\n\n    this.dragDirective.observe(this.elementRef.nativeElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxResize.html":{"url":"interfaces/NgxResize.html","title":"interface - NgxResize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NgxResize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/resize/resize.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Boundary\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            nativeEvent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nativeEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nativeEvent:     Event\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Event\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Boundary} from '../shared/boundary/boundary';\n\nexport interface NgxResize extends Boundary {\n  nativeEvent?: Event;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxResizeHandleDirective.html":{"url":"directives/NgxResizeHandleDirective.html","title":"directive - NgxResizeHandleDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgxResizeHandleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/resize/resize-handle.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                The directive that allows to mark HTML element as one of handle of resizing element for NgxResizeDirective\nSee https://angular.io/guide/angular-compiler-options#strictmetadataemit\n\n            \n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxResizeHandle]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngxResizeHandle\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngxResizeHandle\n                    \n                \n                \n                    \n                        Type :         NgxResizeHandleType | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/lib/resize/resize-handle.directive.ts:25\n                            \n                        \n                \n                    \n                        Sets the attribute which define the side the HTML element will affect during drag\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, HostBinding, Input, OnDestroy, PLATFORM_ID, inject } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport {NgxResizeHandleType} from './resize-handle-type.enum';\nimport {NgxResizeDirective} from './resize.directive';\n\n/**\n * The directive that allows to mark HTML element as one of handle of resizing element for {@link NgxResizeDirective}\n *\n * @author Dmytro Parfenov \n *\n * @dynamic\n * @see https://angular.io/guide/angular-compiler-options#strictmetadataemit\n */\n@Directive({ selector: '[ngxResizeHandle]' })\nexport class NgxResizeHandleDirective implements AfterViewInit, OnDestroy {\n  private readonly elementRef = inject>(ElementRef);\n  private readonly platformId = inject(PLATFORM_ID);\n  private readonly resizeDirective = inject(NgxResizeDirective, { optional: true });\n\n  /**\n   * Sets the attribute which define the side the HTML element will affect during drag\n   */\n  @Input('ngxResizeHandle')\n  @HostBinding('attr.data-ngx-resize-handle-type')\n  type: NgxResizeHandleType | null = null;\n\n  /**\n   * @inheritDoc\n   */\n  ngAfterViewInit(): void {\n    if (isPlatformServer(this.platformId) || !this.resizeDirective) {\n      return;\n    }\n\n    this.resizeDirective.observe(this.elementRef.nativeElement);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngOnDestroy(): void {\n    if (!this.resizeDirective) {\n      return;\n    }\n\n    this.resizeDirective.unsubscribe(this.elementRef.nativeElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PositionBase.html":{"url":"interfaces/PositionBase.html","title":"interface - PositionBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PositionBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/core/position-base.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PositionBase {\n  x: number;\n  y: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Scale.html":{"url":"interfaces/Scale.html","title":"interface - Scale","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Scale\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/resize/scale.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            delta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        delta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Scale {\n  delta: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\n3.0.0\n\nmigrate to Angular v20\n\n2.0.2\n\nupdate dependencies\n\n2.0.1\n\nupdate dependencies\n\n2.0.0\n\nMigrate to standalone components. See Migrate an existing Angular project to standalone\n\n1.0.3\n\nupdate dependencies\n\n1.0.2\n\nupdate dependencies\ntslib: ^2.8.1\n\n\n\n1.0.1\n\nupdate peerDependencies\n@angular/common: ^19.0.0\n@angular/core: ^19.0.0\n\n\n\n1.0.0\n\nmigrate to Angular v19\nmigrate to ESLint\n\n0.0.6\n\nupdate docs\n\n0.0.5\n\nupdate docs\n\n0.0.4\n\nupdate docs\n\n0.0.3\n\ndocumentation typos\n\n0.0.2\n\nadded unit tests\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NgxResizeHandleType   (src/.../resize-handle-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/resize/resize-handle-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NgxResizeHandleType\n                    \n                \n                        \n                            \n                                 TopLeft\n                            \n                        \n                        \n                            \n                                Value : top-left\n                            \n                        \n                        \n                            \n                                 Top\n                            \n                        \n                        \n                            \n                                Value : top\n                            \n                        \n                        \n                            \n                                 TopRight\n                            \n                        \n                        \n                            \n                                Value : top-right\n                            \n                        \n                        \n                            \n                                 Right\n                            \n                        \n                        \n                            \n                                Value : right\n                            \n                        \n                        \n                            \n                                 BottomRight\n                            \n                        \n                        \n                            \n                                Value : bottom-right\n                            \n                        \n                        \n                            \n                                 Bottom\n                            \n                        \n                        \n                            \n                                Value : bottom\n                            \n                        \n                        \n                            \n                                 BottomLeft\n                            \n                        \n                        \n                            \n                                Value : bottom-left\n                            \n                        \n                        \n                            \n                                 Left\n                            \n                        \n                        \n                            \n                                Value : left\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-drag-resize\nThe Angular library provides opportunity to use drag and resize functionality on HTML element.\nDemo\nngx-drag-resize\nInstall\nNPM: npm install ngx-drag-resize --save\nYarn: yarn add ngx-drag-resize\nUsage\nEnsure your component imports all required directives.\nExample :import {\n  NgxDragDirective,\n  NgxDragHandleDirective,\n  NgxResizeDirective,\n  NgxResizeHandleDirective\n} from 'ngx-drag-resize';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  imports: [NgxResizeDirective, NgxResizeHandleDirective, NgxDragDirective, NgxDragHandleDirective]\n})\nexport class AppComponent {}Use directives within your template.\nSimple drag.\nExample :drag meInitiates only when dragging handle.\nExample :\n  drag me\n  handle\nA simple resize works only via scrolling or using two fingers on touch devices.\nExample :resize meResize using borders, and style all elements as desired.\nExample :\n  resize me\n  \n  \n  \n  \n  \n  \n  \n  \nYou can find more examples in the demo app\nDocumentation\nDocs page\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 3.0.0\n        \n            Description : The Angular library provides opportunity to use drag and resize functionality on HTML element\n        \n            Keywords : angular, ngx, drag, resize\n        \n            Homepage : https://dmytro-parfenov.github.io/ngx-drag-resize\n        \n            Bugs : https://github.com/dmytro-parfenov/ngx-drag-resize/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/dmytro-parfenov/ngx-drag-resize.git\n        \n            Author : Dmytro Parfenov\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Axis   (src/.../axis.ts)\n                        \n                        \n                            MovementNative   (src/.../movement-native.ts)\n                        \n                        \n                            PositionStrategy   (src/.../position-strategy.ts)\n                        \n                        \n                            PositionType   (src/.../position-type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/core/axis.ts\n    \n    \n        \n            \n                \n                    \n                    Axis\n                \n            \n            \n                \n                        \"x\" | \"y\" | null\n\n                \n            \n        \n    \n    src/lib/core/movement/movement-native.ts\n    \n    \n        \n            \n                \n                    \n                    MovementNative\n                \n            \n            \n                \n                        MouseEvent | TouchEvent\n\n                \n            \n        \n    \n    src/lib/drag/position-strategy.ts\n    \n    \n        \n            \n                \n                    \n                    PositionStrategy\n                \n            \n            \n                \n                        \"relative\" | \"free\"\n\n                \n            \n        \n    \n    src/lib/resize/position-type.ts\n    \n    \n        \n            \n                \n                    \n                    PositionType\n                \n            \n            \n                \n                        \"fixed\" | \"absolute\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
