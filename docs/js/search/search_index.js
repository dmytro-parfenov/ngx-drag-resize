var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Boundary.html",[0,0.228,1,1.075]],["body/interfaces/Boundary.html",[0,0.268,1,1.615,2,0.93,3,0.668,4,0.668,5,0.668,6,3.08,7,0.452,8,1.013,9,3.018,10,3.018,11,3.018,12,3.018,13,2.865,14,0.993,15,0.057,16,0.555,17,0.045,18,0.045]],["title/interfaces/Movement.html",[0,0.228,19,1.728]],["body/interfaces/Movement.html",[0,0.252,1,1.835,2,0.875,3,0.629,4,0.629,5,0.629,7,0.425,8,0.975,14,0.971,15,0.056,16,0.523,17,0.043,18,0.043,19,2.497,20,2.899,21,1.808,22,2.273,23,2.95,24,3.556,25,1.553,26,2.136,27,3.556,28,3.353,29,2.355,30,1.144,31,1.911,32,1.911,33,1.618]],["title/interfaces/MovementBase.html",[0,0.228,34,1.728]],["body/interfaces/MovementBase.html",[0,0.272,2,0.943,3,0.678,4,0.678,5,0.678,7,0.458,8,1.023,14,0.862,15,0.057,16,0.563,17,0.045,18,0.045,21,1.897,22,2.319,23,3.034,26,2.197,30,0.943,31,2.059,32,2.059,34,2.62,35,2.482,36,2.482,37,3.475,38,3.475]],["title/interfaces/NgxDrag.html",[0,0.228,39,1.728]],["body/interfaces/NgxDrag.html",[0,0.293,1,1.856,2,1.017,3,0.731,4,0.731,5,0.731,7,0.494,8,1.072,14,0.731,15,0.055,16,0.608,17,0.047,18,0.047,21,1.989,25,1.709,26,2.257,29,2.526,30,1.017,33,1.88,39,2.748,40,3.369]],["title/directives/NgxDragDirective.html",[41,1.075,42,1.463]],["body/directives/NgxDragDirective.html",[1,0.817,3,0.149,4,0.149,5,0.149,7,0.101,9,0.803,10,2.405,11,0.803,12,2.405,13,0.68,14,0.549,15,0.06,16,0.124,17,0.014,18,0.014,19,0.803,21,0.582,22,0.582,23,0.803,24,0.545,25,0.5,26,0.327,27,0.968,28,2.176,29,1.112,30,1.102,31,1.925,32,0.803,33,0.383,34,0.452,39,1.084,41,0.817,42,0.68,43,0.327,44,0.686,45,0.383,46,0.803,47,1.528,48,0.582,49,1.597,50,0.968,51,1.411,52,0.803,53,0.803,54,0.803,55,1.645,56,0.803,57,1.645,58,1.084,59,0.452,60,1.112,61,1.219,62,1.584,63,0.968,64,1.993,65,1.645,66,1.645,67,1.645,68,1.219,69,1.993,70,1.219,71,2.921,72,2.176,73,1.219,74,2.529,75,2.03,76,1.645,77,1.645,78,2.921,79,1.814,80,1.645,81,0.686,82,2.009,83,1.667,84,1.219,85,0.686,86,1.219,87,1.219,88,1.814,89,1.667,90,0.686,91,1.219,92,1.307,93,2.176,94,0.686,95,1.219,96,1.645,97,1.993,98,1.219,99,1.219,100,2.009,101,1.993,102,1.219,103,1.219,104,0.968,105,1.219,106,1.645,107,0.686,108,2.284,109,1.645,110,1.219,111,1.219,112,0.686,113,0.582,114,1.219,115,1.219,116,1.645,117,1.219,118,1.219,119,2.03,120,0.686,121,0.803,122,0.452,123,1.814,124,1.219,125,0.452,126,0.686,127,0.383,128,1.645,129,0.686,130,0.686,131,0.686,132,0.686,133,0.686,134,0.452,135,0.383,136,0.686,137,0.686,138,1.219,139,0.686,140,1.219,141,0.686,142,0.686,143,0.383,144,0.383,145,0.383,146,0.452,147,0.686,148,0.383,149,2.279,150,1.505,151,0.452,152,0.686,153,0.686,154,0.686,155,0.686,156,0.452,157,0.452,158,1.219,159,1.584,160,0.686,161,0.686,162,0.686,163,1.645,164,0.545,165,0.686,166,0.686,167,0.686,168,0.686,169,0.686,170,0.803,171,0.686,172,0.452,173,1.805,174,0.545,175,0.452,176,0.686,177,1.645,178,0.686,179,0.686,180,0.686,181,1.645,182,2.284,183,1.645,184,0.686,185,0.686,186,0.686,187,0.686,188,0.686,189,0.686,190,0.686,191,1.645,192,0.686,193,1.645,194,1.219,195,1.645,196,0.686,197,2.284,198,1.219,199,1.219,200,0.686,201,0.686,202,0.686,203,0.686,204,0.686,205,0.686,206,0.545,207,0.686,208,0.686,209,1.219,210,1.645,211,1.219,212,1.645,213,1.219,214,0.686,215,0.686,216,0.686,217,0.686,218,1.219,219,0.686,220,0.686,221,0.686,222,0.686,223,0.686,224,0.686,225,1.219,226,1.219,227,0.686,228,0.686,229,0.686,230,1.219,231,0.686,232,0.686,233,0.686,234,1.219,235,1.219,236,1.993,237,0.803,238,0.803,239,0.686,240,0.686,241,0.686,242,1.993,243,1.219,244,1.219,245,1.219,246,1.219,247,1.219,248,1.219,249,0.686,250,0.686,251,0.686,252,0.452,253,0.686,254,0.686,255,0.686,256,0.686]],["title/directives/NgxDragHandleDirective.html",[41,1.075,257,1.728]],["body/directives/NgxDragHandleDirective.html",[3,0.464,4,0.464,5,0.464,15,0.06,16,0.386,17,0.035,18,0.035,25,0.877,30,1.087,41,1.613,42,2.196,43,1.021,45,1.193,46,2.026,48,1.467,49,1.989,51,1.715,52,2.026,53,2.026,54,2.026,56,2.026,58,2.372,59,1.41,60,1.715,62,1.699,75,2.026,113,1.467,119,2.372,121,2.026,122,1.41,125,1.41,127,1.193,134,1.41,135,1.193,143,1.193,144,1.193,145,1.193,146,1.41,148,1.193,149,2.594,150,2.372,151,1.41,156,1.41,157,1.41,159,1.699,164,1.699,170,2.026,172,1.41,173,1.41,174,2.443,175,1.41,252,2.026,257,2.026,258,2.139,259,1.699,260,2.443,261,2.86,262,3.075,263,2.139,264,2.139,265,2.139,266,1.699,267,1.699,268,1.699,269,2.139,270,2.139,271,2.139]],["title/interfaces/NgxResize.html",[0,0.228,272,2.083]],["body/interfaces/NgxResize.html",[0,0.293,1,1.856,2,1.017,3,0.731,4,0.731,5,0.731,7,0.494,8,1.072,14,0.731,15,0.055,16,0.608,17,0.047,18,0.047,21,1.989,25,1.709,26,2.257,29,2.526,30,1.017,33,1.88,272,3.312,273,3.369]],["title/directives/NgxResizeHandleDirective.html",[41,1.075,274,1.728]],["body/directives/NgxResizeHandleDirective.html",[3,0.401,4,0.401,5,0.401,7,0.272,14,0.718,15,0.059,16,0.334,17,0.031,18,0.031,25,0.758,30,1.109,41,1.505,43,0.883,45,1.032,46,1.822,47,1.542,48,1.752,49,1.967,51,1.542,52,1.822,53,1.822,54,1.822,56,1.822,58,2.181,59,1.219,60,1.542,63,2.196,72,1.47,79,2.196,82,1.47,83,1.219,89,2.42,113,1.752,119,1.822,121,1.822,122,1.219,123,1.47,125,1.219,127,1.032,134,1.219,135,1.032,143,1.032,144,1.032,145,1.032,146,1.219,148,1.032,149,2.181,150,2.181,151,1.219,156,1.219,157,1.219,170,1.822,172,1.219,173,1.822,175,1.219,252,1.219,259,1.47,260,2.196,261,2.63,266,1.47,267,1.47,268,2.196,274,1.822,275,2.196,276,2.765,277,2.765,278,2.63,279,3.672,280,2.63,281,1.85,282,2.765,283,2.765,284,2.765,285,2.765,286,1.85,287,1.822,288,1.85,289,1.85,290,1.85,291,1.85,292,1.85,293,1.85,294,1.219,295,2.765,296,1.85,297,1.85]],["title/interfaces/PositionBase.html",[0,0.228,22,1.251]],["body/interfaces/PositionBase.html",[0,0.292,2,1.012,3,0.727,4,0.727,5,0.727,7,0.492,8,1.069,13,2.76,14,0.901,15,0.056,16,0.604,17,0.047,18,0.047,22,1.983,36,2.663,237,3.112,238,3.112,298,3.352]],["title/interfaces/Scale.html",[0,0.228,299,2.083]],["body/interfaces/Scale.html",[0,0.308,2,1.068,3,0.767,4,0.767,5,0.767,7,0.519,8,1.104,13,2.58,14,0.767,15,0.056,16,0.638,17,0.049,18,0.049,299,3.411,300,3.536,301,4.81]],["title/changelog.html",[302,1.753,303,1.753,304,1.753]],["body/changelog.html",[15,0.043,17,0.043,18,0.043,51,1.632,127,1.632,135,1.632,206,3.961,304,2.324,305,2.324,306,4.658,307,2.926,308,4.658,309,2.794,310,2.926,311,2.926,312,2.926,313,2.926,314,3.812,315,2.926,316,2.926,317,2.926,318,2.926,319,2.926,320,2.926,321,2.926,322,2.926,323,2.926,324,3.812,325,2.926,326,2.926,327,2.926,328,2.926,329,3.368,330,2.926,331,2.926,332,2.926,333,2.324,334,2.926,335,2.926,336,2.926,337,2.926,338,2.926]],["title/miscellaneous/enumerations.html",[339,1.231,340,2.498]],["body/miscellaneous/enumerations.html",[7,0.458,9,3.034,10,3.034,11,3.034,12,3.034,15,0.058,17,0.045,18,0.045,83,3.294,113,1.897,275,2.482,280,3.159,339,1.743,340,2.482,341,3.124,342,3.976,343,3.124,344,3.124,345,3.124,346,3.124]],["title/index.html",[7,0.324,302,1.753,303,1.753]],["body/index.html",[15,0.052,16,0.433,17,0.038,18,0.038,30,0.725,42,1.862,43,1.592,47,2.671,48,1.146,49,1.146,50,1.908,60,1.34,75,1.583,100,1.908,113,1.592,148,1.34,257,2.2,274,2.2,278,2.651,287,3.155,294,2.87,309,1.583,329,1.908,333,1.908,347,1.908,348,1.908,349,1.908,350,2.651,351,1.908,352,3.338,353,3.338,354,3.338,355,2.402,356,3.338,357,2.402,358,2.402,359,2.402,360,3.338,361,3.338,362,2.402,363,4.355,364,3.338,365,2.402,366,2.402,367,2.402,368,2.402,369,2.402,370,2.402,371,2.402,372,2.402,373,3.338,374,2.402,375,2.402,376,2.402,377,2.402,378,3.338,379,2.402,380,2.402,381,2.402,382,2.402,383,2.402,384,2.402,385,2.402,386,2.402,387,2.402,388,2.402,389,2.402]],["title/modules.html",[390,2.816]],["body/modules.html",[15,0.053,17,0.053,18,0.053,390,3.195]],["title/overview.html",[391,2.816]],["body/overview.html",[2,1.185,15,0.052,17,0.052,18,0.052,43,1.872,391,3.117,392,3.924,393,3.924]],["title/properties.html",[8,0.809,394,2.207]],["body/properties.html",[8,0.804,15,0.058,17,0.045,18,0.045,45,1.743,47,2.652,48,1.491,49,1.491,143,1.743,144,1.743,145,1.743,287,2.882,294,2.059,305,2.482,309,2.62,347,2.482,348,2.482,349,2.482,350,2.482,351,2.482,395,3.124,396,3.124,397,3.124,398,3.124,399,3.124,400,3.124,401,3.976,402,3.976,403,3.124,404,3.124,405,3.124,406,3.124,407,3.124]],["title/miscellaneous/typealiases.html",[339,1.231,408,3.145]],["body/miscellaneous/typealiases.html",[7,0.475,14,0.702,15,0.056,17,0.046,18,0.046,35,2.569,37,2.569,38,2.569,88,3.229,89,2.131,92,3.229,93,2.569,104,2.569,237,2.131,238,2.131,339,1.804,409,3.234,410,3.234,411,4.064,412,3.234,413,4.064,414,4.064,415,4.064,416,4.064,417,4.064,418,3.234,419,3.234,420,3.234,421,3.234,422,3.234]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":177,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["0.0.2",{"_index":335,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":332,"title":{},"body":{"changelog.html":{}}}],["0.0.4",{"_index":331,"title":{},"body":{"changelog.html":{}}}],["0.0.5",{"_index":330,"title":{},"body":{"changelog.html":{}}}],["0.0.6",{"_index":328,"title":{},"body":{"changelog.html":{}}}],["1.0.0",{"_index":325,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":322,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":319,"title":{},"body":{"changelog.html":{}}}],["1.0.3",{"_index":318,"title":{},"body":{"changelog.html":{}}}],["19.0.0",{"_index":324,"title":{},"body":{"changelog.html":{}}}],["2.0.0",{"_index":313,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":312,"title":{},"body":{"changelog.html":{}}}],["2.0.2",{"_index":311,"title":{},"body":{"changelog.html":{}}}],["2.8.1",{"_index":321,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":307,"title":{},"body":{"changelog.html":{}}}],["3.1.0",{"_index":305,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["4",{"_index":392,"title":{},"body":{"overview.html":{}}}],["7",{"_index":393,"title":{},"body":{"overview.html":{}}}],["absolute",{"_index":422,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["accessors",{"_index":70,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["add",{"_index":357,"title":{},"body":{"index.html":{}}}],["added",{"_index":336,"title":{},"body":{"changelog.html":{}}}],["affect",{"_index":284,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["afterviewinit",{"_index":261,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["aliases",{"_index":409,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":46,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["angular",{"_index":309,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["angular/common",{"_index":135,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"changelog.html":{}}}],["angular/core",{"_index":127,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"changelog.html":{}}}],["app",{"_index":364,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":367,"title":{},"body":{"index.html":{}}}],["app.component.scss",{"_index":369,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":370,"title":{},"body":{"index.html":{}}}],["attribute",{"_index":282,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["author",{"_index":143,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"properties.html":{}}}],["axis",{"_index":88,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/typealiases.html":{}}}],["base",{"_index":32,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{}}}],["base.ts",{"_index":36,"title":{},"body":{"interfaces/MovementBase.html":{},"interfaces/PositionBase.html":{}}}],["boolean",{"_index":81,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["borders",{"_index":384,"title":{},"body":{"index.html":{}}}],["bottom",{"_index":9,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"miscellaneous/enumerations.html":{}}}],["bottomleft",{"_index":346,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bottomright",{"_index":345,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["boundary",{"_index":1,"title":{"interfaces/Boundary.html":{}},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["boundarydirective",{"_index":55,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect",{"_index":218,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect.bottom",{"_index":231,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect.left",{"_index":226,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect.right",{"_index":227,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect.top",{"_index":230,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["bugs",{"_index":400,"title":{},"body":{"properties.html":{}}}],["calculation",{"_index":215,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["changed",{"_index":165,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["changelog",{"_index":304,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":109,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["changing",{"_index":97,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["class",{"_index":148,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["compiler",{"_index":53,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["component",{"_index":360,"title":{},"body":{"index.html":{}}}],["components",{"_index":315,"title":{},"body":{"changelog.html":{}}}],["const",{"_index":197,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["constrain",{"_index":74,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/axis",{"_index":137,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/drag.service",{"_index":139,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/movement/movement",{"_index":140,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/position",{"_index":141,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/window.token",{"_index":142,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["css",{"_index":76,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["default",{"_index":82,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["define",{"_index":79,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["defined",{"_index":72,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["delta",{"_index":301,"title":{},"body":{"interfaces/Scale.html":{}}}],["demo",{"_index":352,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":306,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":45,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"properties.html":{}}}],["desired",{"_index":386,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":162,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["destroyed",{"_index":161,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["devices",{"_index":382,"title":{},"body":{"index.html":{}}}],["directive",{"_index":41,"title":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["directive({selector",{"_index":147,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["directives",{"_index":43,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{},"overview.html":{}}}],["disable",{"_index":86,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["dmytro",{"_index":144,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"properties.html":{}}}],["docs",{"_index":329,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["documentation",{"_index":333,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["drag",{"_index":47,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{},"properties.html":{}}}],["drag.directive",{"_index":263,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["dragdirective",{"_index":264,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["dragged",{"_index":110,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["dragging",{"_index":75,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"index.html":{}}}],["dragservice",{"_index":138,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["during",{"_index":285,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["dynamic",{"_index":146,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["element",{"_index":49,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{},"properties.html":{}}}],["elementref",{"_index":121,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["elements",{"_index":385,"title":{},"body":{"index.html":{}}}],["emitdrag(nativeevent",{"_index":253,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["emits",{"_index":108,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ensure",{"_index":359,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":340,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eslint",{"_index":327,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":29,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["event.initial",{"_index":194,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.initial.x",{"_index":191,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.initial.y",{"_index":193,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.nativeevent.preventdefault",{"_index":188,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.offsetfromhost.left",{"_index":221,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.offsetfromhost.top",{"_index":223,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.x",{"_index":220,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.y",{"_index":222,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["eventemitter",{"_index":106,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["eventinitial",{"_index":183,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["eventinitial.x",{"_index":190,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["eventinitial.y",{"_index":192,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["events",{"_index":87,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["example",{"_index":363,"title":{},"body":{"index.html":{}}}],["examples",{"_index":389,"title":{},"body":{"index.html":{}}}],["existing",{"_index":316,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":16,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"index.html":{}}}],["extends",{"_index":21,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["false",{"_index":84,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["find",{"_index":387,"title":{},"body":{"index.html":{}}}],["fingers",{"_index":380,"title":{},"body":{"index.html":{}}}],["fixed",{"_index":421,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["free",{"_index":93,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/typealiases.html":{}}}],["fromelement(target",{"_index":185,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["function/translate3d",{"_index":103,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["functionality",{"_index":351,"title":{},"body":{"index.html":{},"properties.html":{}}}],["getting",{"_index":302,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["handle",{"_index":113,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["handle.directive.ts",{"_index":259,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["handle.directive.ts:25",{"_index":281,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["homepage",{"_index":397,"title":{},"body":{"properties.html":{}}}],["host",{"_index":159,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{}}}],["hostbinding",{"_index":286,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["hostbinding('attr.data",{"_index":293,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["hostelementrect",{"_index":181,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.bottom",{"_index":200,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.height",{"_index":232,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.left",{"_index":199,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.right",{"_index":201,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.top",{"_index":198,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.width",{"_index":228,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrectinitial",{"_index":160,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["html",{"_index":48,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{},"properties.html":{}}}],["htmlelement",{"_index":28,"title":{},"body":{"interfaces/Movement.html":{},"directives/NgxDragDirective.html":{}}}],["https://angular.io/guide/angular",{"_index":52,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["https://developer.mozilla.org/en",{"_index":101,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["https://dmytro",{"_index":398,"title":{},"body":{"properties.html":{}}}],["https://github.com/dmytro",{"_index":401,"title":{},"body":{"properties.html":{}}}],["implements",{"_index":56,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["import",{"_index":30,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["imports",{"_index":361,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["inheritdoc",{"_index":170,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["initial",{"_index":23,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{}}}],["initiator",{"_index":24,"title":{},"body":{"interfaces/Movement.html":{},"directives/NgxDragDirective.html":{}}}],["inject",{"_index":122,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["inject(dragservice",{"_index":154,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["inject(ngxdragdirective",{"_index":265,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["inject(ngxresizedirective",{"_index":291,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["inject(platform_id",{"_index":157,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["inject(renderer2",{"_index":153,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["inject(window",{"_index":155,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["inject>(elementref",{"_index":151,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["input",{"_index":123,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["input('ngxresizehandle",{"_index":292,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["inputs",{"_index":63,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["install",{"_index":353,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"interfaces/NgxResize.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"interfaces/NgxResize.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"interfaces/NgxResize.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"overview.html":{}}}],["isplatformserver",{"_index":134,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["isplatformserver(this.platformid",{"_index":172,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["keywords",{"_index":396,"title":{},"body":{"properties.html":{}}}],["left",{"_index":10,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"miscellaneous/enumerations.html":{}}}],["left')}px",{"_index":248,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["library",{"_index":347,"title":{},"body":{"index.html":{},"properties.html":{}}}],["license",{"_index":404,"title":{},"body":{"properties.html":{}}}],["link",{"_index":252,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["locks",{"_index":91,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["map",{"_index":130,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["map((event",{"_index":189,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["mark",{"_index":260,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["matching",{"_index":18,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["math.max(boundaryrect.left",{"_index":224,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["math.max(boundaryrect.top",{"_index":229,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["math.min",{"_index":225,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["meinitiates",{"_index":374,"title":{},"body":{"index.html":{}}}],["meresize",{"_index":383,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":59,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["methods",{"_index":61,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["migrate",{"_index":308,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":339,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":405,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":390,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":388,"title":{},"body":{"index.html":{}}}],["mouseevent",{"_index":37,"title":{},"body":{"interfaces/MovementBase.html":{},"miscellaneous/typealiases.html":{}}}],["movement",{"_index":19,"title":{"interfaces/Movement.html":{}},"body":{"interfaces/Movement.html":{},"directives/NgxDragDirective.html":{}}}],["movementbase",{"_index":34,"title":{"interfaces/MovementBase.html":{}},"body":{"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{}}}],["movementnative",{"_index":411,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["name",{"_index":115,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["native.ts",{"_index":413,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nativeevent",{"_index":26,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["new",{"_index":163,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngafterviewinit",{"_index":267,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["ngondestroy",{"_index":175,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["ngoninit",{"_index":171,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngx",{"_index":294,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{},"index.html":{},"properties.html":{}}}],["ngxdrag",{"_index":39,"title":{"interfaces/NgxDrag.html":{}},"body":{"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{}}}],["ngxdragboundary",{"_index":64,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragboundary(boundary",{"_index":168,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragdirective",{"_index":42,"title":{"directives/NgxDragDirective.html":{}},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"index.html":{}}}],["ngxdragdisabled",{"_index":65,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragged",{"_index":69,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdraghandle",{"_index":262,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["ngxdraghandledirective",{"_index":257,"title":{"directives/NgxDragHandleDirective.html":{}},"body":{"directives/NgxDragHandleDirective.html":{},"index.html":{}}}],["ngxdraglockaxis",{"_index":66,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragpositionstrategy",{"_index":67,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxresize",{"_index":272,"title":{"interfaces/NgxResize.html":{}},"body":{"interfaces/NgxResize.html":{}}}],["ngxresizedirective",{"_index":278,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["ngxresizehandle",{"_index":279,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["ngxresizehandledirective",{"_index":274,"title":{"directives/NgxResizeHandleDirective.html":{}},"body":{"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["ngxresizehandletype",{"_index":280,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{},"miscellaneous/enumerations.html":{}}}],["npm",{"_index":354,"title":{},"body":{"index.html":{}}}],["null",{"_index":89,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":13,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["object",{"_index":80,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["observable",{"_index":164,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{}}}],["observabletargetchange",{"_index":166,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["observe",{"_index":62,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{}}}],["observe(target",{"_index":111,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["offsetfromhost",{"_index":27,"title":{},"body":{"interfaces/Movement.html":{},"directives/NgxDragDirective.html":{}}}],["ondestroy",{"_index":58,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["ondrag(event",{"_index":216,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["one",{"_index":276,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["oninit",{"_index":57,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["opportunity",{"_index":349,"title":{},"body":{"index.html":{},"properties.html":{}}}],["optional",{"_index":25,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["options#strictmetadataemit",{"_index":54,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["output",{"_index":124,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["outputs",{"_index":68,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["overview",{"_index":391,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":394,"title":{"properties.html":{}},"body":{}}],["page",{"_index":50,"title":{},"body":{"directives/NgxDragDirective.html":{},"index.html":{}}}],["parameters",{"_index":114,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["parfenov",{"_index":145,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"properties.html":{}}}],["parfenov.github.io/ngx",{"_index":399,"title":{},"body":{"properties.html":{}}}],["parfenov/ngx",{"_index":402,"title":{},"body":{"properties.html":{}}}],["peerdependencies",{"_index":323,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":186,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["platform_id",{"_index":125,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["platformid",{"_index":156,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["point",{"_index":269,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["position",{"_index":31,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{}}}],["positionbase",{"_index":22,"title":{"interfaces/PositionBase.html":{}},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{},"interfaces/PositionBase.html":{}}}],["positioning",{"_index":95,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["positionstrategy",{"_index":92,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/typealiases.html":{}}}],["positiontype",{"_index":416,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["private",{"_index":149,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["project",{"_index":317,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"interfaces/NgxResize.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"properties.html":{}}}],["provides",{"_index":348,"title":{},"body":{"index.html":{},"properties.html":{}}}],["put",{"_index":77,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["readonly",{"_index":150,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["rect",{"_index":209,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rect.bottom",{"_index":256,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rect.left",{"_index":211,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rect.right",{"_index":255,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rect.top",{"_index":213,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["relative",{"_index":104,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/typealiases.html":{}}}],["renderer",{"_index":152,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["renderer2",{"_index":126,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["repository",{"_index":406,"title":{},"body":{"properties.html":{}}}],["required",{"_index":362,"title":{},"body":{"index.html":{}}}],["resize",{"_index":287,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{},"index.html":{},"properties.html":{}}}],["resize.directive",{"_index":289,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["resize.git",{"_index":407,"title":{},"body":{"properties.html":{}}}],["resize/issues",{"_index":403,"title":{},"body":{"properties.html":{}}}],["resizedirective",{"_index":290,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["resizing",{"_index":277,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["results",{"_index":17,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":173,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["returns",{"_index":118,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["right",{"_index":11,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"miscellaneous/enumerations.html":{}}}],["root",{"_index":365,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":129,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rxjs/operators",{"_index":133,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["save",{"_index":355,"title":{},"body":{"index.html":{}}}],["scale",{"_index":299,"title":{"interfaces/Scale.html":{}},"body":{"interfaces/Scale.html":{}}}],["scrolling",{"_index":377,"title":{},"body":{"index.html":{}}}],["see",{"_index":51,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"changelog.html":{}}}],["selector",{"_index":60,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["set",{"_index":167,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["setngxdragboundary(boundary",{"_index":120,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["sets",{"_index":268,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["shared/boundary/boundary",{"_index":33,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["shared/boundary/boundary.directive",{"_index":136,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["side",{"_index":283,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["simple",{"_index":373,"title":{},"body":{"index.html":{}}}],["size",{"_index":158,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["src/.../axis.ts",{"_index":410,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../movement",{"_index":412,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../position",{"_index":414,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../resize",{"_index":341,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/lib/core/axis.ts",{"_index":418,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/core/movement/movement",{"_index":35,"title":{},"body":{"interfaces/MovementBase.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/core/movement/movement.ts",{"_index":20,"title":{},"body":{"interfaces/Movement.html":{}}}],["src/lib/core/position",{"_index":298,"title":{},"body":{"interfaces/PositionBase.html":{}}}],["src/lib/drag/drag",{"_index":258,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["src/lib/drag/drag.directive.ts",{"_index":44,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:122",{"_index":112,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:73",{"_index":94,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:78",{"_index":90,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:83",{"_index":85,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:90",{"_index":73,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:97",{"_index":107,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.ts",{"_index":40,"title":{},"body":{"interfaces/NgxDrag.html":{}}}],["src/lib/drag/position",{"_index":419,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/resize/position",{"_index":420,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/resize/resize",{"_index":275,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{},"miscellaneous/enumerations.html":{}}}],["src/lib/resize/resize.ts",{"_index":273,"title":{},"body":{"interfaces/NgxResize.html":{}}}],["src/lib/resize/scale.ts",{"_index":300,"title":{},"body":{"interfaces/Scale.html":{}}}],["src/lib/shared/boundary/boundary.ts",{"_index":6,"title":{},"body":{"interfaces/Boundary.html":{}}}],["standalone",{"_index":314,"title":{},"body":{"changelog.html":{}}}],["started",{"_index":303,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["starts",{"_index":214,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["strategy",{"_index":96,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["strategy.ts",{"_index":415,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["string",{"_index":71,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["style",{"_index":100,"title":{},"body":{"directives/NgxDragDirective.html":{},"index.html":{}}}],["styleurls",{"_index":368,"title":{},"body":{"index.html":{}}}],["subject",{"_index":128,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["subscribe",{"_index":205,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["takeuntil",{"_index":131,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["takeuntil(this.destroy",{"_index":203,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["takeuntil(this.observabletargetchange",{"_index":204,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["tap",{"_index":132,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["tap((event",{"_index":187,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["tap(this.ondrag.bind(this",{"_index":202,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["target",{"_index":116,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["template",{"_index":372,"title":{},"body":{"index.html":{}}}],["templateurl",{"_index":366,"title":{},"body":{"index.html":{}}}],["tests",{"_index":338,"title":{},"body":{"changelog.html":{}}}],["this.basedonboundary(left",{"_index":247,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.basedonboundary(top",{"_index":244,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.boundary",{"_index":169,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.destroy$.complete",{"_index":178,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.destroy$.next(void",{"_index":176,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.dragdirective",{"_index":270,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["this.dragdirective.observe(this.elementref.nativeelement",{"_index":271,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["this.dragservice",{"_index":184,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.elementref.nativeelement",{"_index":117,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.elementref.nativeelement.getboundingclientrect",{"_index":182,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.emitdrag(event.nativeevent",{"_index":242,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.getboundary",{"_index":219,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.hostelementrectinitial",{"_index":195,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.hostelementrectinitial.left",{"_index":234,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.hostelementrectinitial.top",{"_index":235,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.ngxdragdisabled",{"_index":217,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.ngxdragged.emit",{"_index":254,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.ngxdraglockaxis",{"_index":236,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.ngxdragpositionstrategy",{"_index":233,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.observabletargetchange$.complete",{"_index":179,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.observabletargetchange$.next(void",{"_index":180,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.observe",{"_index":174,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{}}}],["this.renderer.setstyle(this.elementref.nativeelement",{"_index":251,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.resizedirective",{"_index":295,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["this.resizedirective.observe(this.elementref.nativeelement",{"_index":296,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["this.resizedirective.unsubscribe(this.elementref.nativeelement",{"_index":297,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["this.updatehoststyle('left",{"_index":246,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.updatehoststyle('top",{"_index":243,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.updatehoststyle('transform",{"_index":239,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.updateinitialrect",{"_index":196,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.window",{"_index":208,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.window.scrollx",{"_index":210,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.window.scrolly",{"_index":212,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["top",{"_index":12,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"miscellaneous/enumerations.html":{}}}],["top')}px",{"_index":245,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["topleft",{"_index":343,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["topright",{"_index":344,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["top}px",{"_index":241,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["touch",{"_index":381,"title":{},"body":{"index.html":{}}}],["touchevent",{"_index":38,"title":{},"body":{"interfaces/MovementBase.html":{},"miscellaneous/typealiases.html":{}}}],["transform",{"_index":98,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["translate3d",{"_index":99,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["translate3d(${left}px",{"_index":240,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["true",{"_index":266,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["tslib",{"_index":320,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":379,"title":{},"body":{"index.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"miscellaneous/typealiases.html":{}}}],["type.enum",{"_index":288,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["type.enum.ts",{"_index":342,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.ts",{"_index":417,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":408,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typos",{"_index":334,"title":{},"body":{"changelog.html":{}}}],["unit",{"_index":337,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":206,"title":{},"body":{"directives/NgxDragDirective.html":{},"changelog.html":{}}}],["updatehoststyle(style",{"_index":250,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["updateinitialrect",{"_index":207,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["updates",{"_index":249,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["us/docs/web/css/position",{"_index":105,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["us/docs/web/css/transform",{"_index":102,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["usage",{"_index":358,"title":{},"body":{"index.html":{}}}],["use",{"_index":350,"title":{},"body":{"index.html":{},"properties.html":{}}}],["using",{"_index":378,"title":{},"body":{"index.html":{}}}],["v19",{"_index":326,"title":{},"body":{"changelog.html":{}}}],["v20",{"_index":310,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":83,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"miscellaneous/enumerations.html":{}}}],["version",{"_index":395,"title":{},"body":{"properties.html":{}}}],["via",{"_index":376,"title":{},"body":{"index.html":{}}}],["void",{"_index":119,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["window",{"_index":78,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["within",{"_index":371,"title":{},"body":{"index.html":{}}}],["works",{"_index":375,"title":{},"body":{"index.html":{}}}],["x",{"_index":238,"title":{},"body":{"directives/NgxDragDirective.html":{},"interfaces/PositionBase.html":{},"miscellaneous/typealiases.html":{}}}],["y",{"_index":237,"title":{},"body":{"directives/NgxDragDirective.html":{},"interfaces/PositionBase.html":{},"miscellaneous/typealiases.html":{}}}],["yarn",{"_index":356,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Boundary.html":{"url":"interfaces/Boundary.html","title":"interface - Boundary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Boundary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/shared/boundary/boundary.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bottom\n                                        \n                                \n                                \n                                        \n                                            left\n                                        \n                                \n                                \n                                        \n                                            right\n                                        \n                                \n                                \n                                        \n                                            top\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bottom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        left:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        right:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        top:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Boundary {\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Movement.html":{"url":"interfaces/Movement.html","title":"interface - Movement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Movement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/core/movement/movement.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PositionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            initial\n                                        \n                                \n                                \n                                        \n                                            initiator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nativeEvent\n                                        \n                                \n                                \n                                        \n                                            offsetFromHost\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initial:         PositionBase\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PositionBase\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initiator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initiator:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nativeEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nativeEvent:     Event\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Event\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offsetFromHost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offsetFromHost:         Boundary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Boundary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {PositionBase} from '../position-base';\nimport {Boundary} from '../../shared/boundary/boundary';\n\nexport interface Movement extends PositionBase {\n  initiator: HTMLElement;\n  offsetFromHost: Boundary;\n  initial: PositionBase;\n  nativeEvent?: Event;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovementBase.html":{"url":"interfaces/MovementBase.html","title":"interface - MovementBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MovementBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/core/movement/movement-base.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PositionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            initial\n                                        \n                                \n                                \n                                        \n                                            nativeEvent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initial:         PositionBase\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PositionBase\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nativeEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nativeEvent:     MouseEvent | TouchEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MouseEvent | TouchEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {PositionBase} from '../position-base';\n\nexport interface MovementBase extends PositionBase {\n  initial: PositionBase;\n  nativeEvent: MouseEvent | TouchEvent;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxDrag.html":{"url":"interfaces/NgxDrag.html","title":"interface - NgxDrag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NgxDrag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/drag/drag.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Boundary\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            nativeEvent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nativeEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nativeEvent:     Event\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Event\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Boundary} from '../shared/boundary/boundary';\n\nexport interface NgxDrag extends Boundary {\n  nativeEvent?: Event;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxDragDirective.html":{"url":"directives/NgxDragDirective.html","title":"directive - NgxDragDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgxDragDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/drag/drag.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                The directive that allows to drag HTML element on page\nSee https://angular.io/guide/angular-compiler-options#strictmetadataemit\n\n            \n\n            \n                Extends\n            \n            \n                            BoundaryDirective\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxDrag]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                observe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngxDragBoundary\n                            \n                            \n                                ngxDragDisabled\n                            \n                            \n                                ngxDragLockAxis\n                            \n                            \n                                ngxDragPositionStrategy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngxDragged\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ngxDragBoundary\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngxDragBoundary\n                    \n                \n                \n                    \n                        Type :     string | HTMLElement\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:90\n                            \n                        \n                \n                    \n                        Constrain for the dragging element.\nCan be as a HTMLElement or CSS selector.\nYou can put 'window' string to define window object as a constrain.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ngxDragDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:83\n                            \n                        \n                \n                    \n                        Disable any drag events\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ngxDragLockAxis\n                    \n                \n                \n                    \n                        Type :         Axis\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:78\n                            \n                        \n                \n                    \n                        Locks axis for the dragging\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ngxDragPositionStrategy\n                    \n                \n                \n                    \n                        Type :         PositionStrategy\n\n                    \n                \n                \n                    \n                        Default value : 'free'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:73\n                            \n                        \n                \n                    \n                        Define positioning strategy.\n'free' - position will changing by 'transform: translate3d()' style\nSee https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/translate3d\n'relative' - position will changing by 'top' and 'left' style\nSee https://developer.mozilla.org/en-US/docs/Web/CSS/position\nDefault is 'free'.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ngxDragged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:97\n                            \n                        \n                \n                    \n                        Emits changes when element was dragged\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        observe\n                        \n                    \n                \n            \n            \n                \nobserve(target)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/drag/drag.directive.ts:122\n                        \n                    \n\n\n            \n                \n                        Observe the element dragging which will be as handle for dragging\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                target\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.elementRef.nativeElement\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ngxDragBoundary\n                    \n                \n\n\n                \n                    \n                        setngxDragBoundary(boundary: string | HTMLElement)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/drag/drag.directive.ts:90\n                                \n                            \n                    \n                        \n                                Constrain for the dragging element.\nCan be as a HTMLElement or CSS selector.\nYou can put 'window' string to define window object as a constrain.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            boundary\n                                                    \n                                                            \n                                                                        string | HTMLElement\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n  Renderer2\n} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {map, takeUntil, tap} from 'rxjs/operators';\nimport {isPlatformServer} from '@angular/common';\nimport {BoundaryDirective} from '../shared/boundary/boundary.directive';\nimport {PositionStrategy} from './position-strategy';\nimport {Axis} from '../core/axis';\nimport {NgxDrag} from './drag';\nimport {DragService} from '../core/drag.service';\nimport {MovementBase} from '../core/movement/movement-base';\nimport {Movement} from '../core/movement/movement';\nimport {Boundary} from '../shared/boundary/boundary';\nimport {PositionBase} from '../core/position-base';\nimport {WINDOW} from '../core/window.token';\n\n/**\n * The directive that allows to drag HTML element on page\n *\n * @author Dmytro Parfenov \n *\n * @dynamic\n * @see https://angular.io/guide/angular-compiler-options#strictmetadataemit\n */\n@Directive({selector: '[ngxDrag]'})\nexport class NgxDragDirective extends BoundaryDirective implements OnInit, OnDestroy {\n  private readonly elementRef = inject>(ElementRef);\n  private readonly renderer = inject(Renderer2);\n  private readonly dragService = inject(DragService);\n  private readonly window = inject(WINDOW);\n  private readonly platformId = inject(PLATFORM_ID);\n\n\n  /**\n   * Initial size and position of host element\n   */\n  private hostElementRectInitial: {\n    left: number;\n    top: number;\n  } | null = null;\n\n  /**\n   * Emits when directive was destroyed\n   */\n  private destroy$ = new Subject();\n\n  /**\n   * Emits when observable target was changed\n   */\n  private observableTargetChange$ = new Subject();\n\n  /**\n   * Define positioning strategy.\n   *\n   * 'free' - position will changing by 'transform: translate3d()' style\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/translate3d\n   *\n   * 'relative' - position will changing by 'top' and 'left' style\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/position\n   *\n   * Default is 'free'.\n   */\n  @Input() ngxDragPositionStrategy: PositionStrategy = 'free';\n\n  /**\n   * Locks axis for the dragging\n   */\n  @Input() ngxDragLockAxis: Axis = null;\n\n  /**\n   * Disable any drag events\n   */\n  @Input() ngxDragDisabled = false;\n\n  /**\n   * Constrain for the dragging element.\n   * Can be as a HTMLElement or CSS selector.\n   * You can put 'window' string to define window object as a constrain.\n   */\n  @Input() set ngxDragBoundary(boundary: string | HTMLElement) {\n    this.boundary = boundary;\n  }\n\n  /**\n   * Emits changes when element was dragged\n   */\n  @Output() ngxDragged = new EventEmitter();\n\n  /**\n   * @inheritDoc\n   */\n  ngOnInit(): void {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n\n    this.observe();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngOnDestroy(): void {\n    this.destroy$.next(void 0);\n    this.destroy$.complete();\n    this.observableTargetChange$.complete();\n  }\n\n  /**\n   * Observe the element dragging which will be as handle for dragging\n   */\n  observe(target = this.elementRef.nativeElement): void {\n    this.observableTargetChange$.next(void 0);\n\n    let hostElementRect = this.elementRef.nativeElement.getBoundingClientRect();\n    let eventInitial: PositionBase | null = null;\n\n    this.dragService\n      .fromElement(target)\n      .pipe(\n        tap((event) => event.nativeEvent.preventDefault()),\n        map((event) => {\n          if (\n            !eventInitial ||\n            eventInitial.x !== event.initial.x ||\n            eventInitial.y !== event.initial.y\n          ) {\n            eventInitial = event.initial;\n            hostElementRect = this.elementRef.nativeElement.getBoundingClientRect();\n\n            if (!this.hostElementRectInitial) {\n              this.updateInitialRect();\n            }\n          }\n\n          const offsetFromHost = {\n            top: event.initial.y - hostElementRect.top,\n            left: event.initial.x - hostElementRect.left,\n            bottom: hostElementRect.bottom - event.initial.y,\n            right: hostElementRect.right - event.initial.x,\n          } as Boundary;\n\n          return {\n            ...event,\n            initiator: target,\n            offsetFromHost,\n            initial: event.initial,\n          };\n        }),\n        tap(this.onDrag.bind(this)),\n        takeUntil(this.destroy$),\n        takeUntil(this.observableTargetChange$)\n      )\n      .subscribe();\n  }\n\n  /**\n   * Update size and position of host element\n   */\n  private updateInitialRect(): void {\n    if (!this.window) {\n      return;\n    }\n\n    const rect = this.elementRef.nativeElement.getBoundingClientRect();\n\n    this.hostElementRectInitial = {\n      left: this.window.scrollX + rect.left,\n      top: this.window.scrollY + rect.top,\n    };\n  }\n\n  /**\n   * Starts the calculation of drag event and changes host position\n   */\n  private onDrag(event: Movement): void {\n    if (this.ngxDragDisabled) {\n      return;\n    }\n\n    const hostElementRect = this.elementRef.nativeElement.getBoundingClientRect();\n    const boundaryRect = this.getBoundary();\n\n    let left = event.x - event.offsetFromHost.left;\n    let top = event.y - event.offsetFromHost.top;\n\n    if (boundaryRect) {\n      left = Math.max(boundaryRect.left, left);\n      left = Math.min(\n        boundaryRect.left + (boundaryRect.right - boundaryRect.left) - hostElementRect.width,\n        left\n      );\n\n      top = Math.max(boundaryRect.top, top);\n      top = Math.min(\n        boundaryRect.top + (boundaryRect.bottom - boundaryRect.top) - hostElementRect.height,\n        top\n      );\n    }\n\n    if (this.ngxDragPositionStrategy === 'free' && this.hostElementRectInitial) {\n      left = left - this.hostElementRectInitial.left + this.window.scrollX;\n      top = top - this.hostElementRectInitial.top + this.window.scrollY;\n\n      if (this.ngxDragLockAxis === 'y') {\n        top = hostElementRect.top - this.hostElementRectInitial.top + this.window.scrollY;\n      }\n\n      if (this.ngxDragLockAxis === 'x') {\n        left = hostElementRect.left - this.hostElementRectInitial.left + this.window.scrollX;\n      }\n\n      this.updateHostStyle('transform', `translate3d(${left}px, ${top}px, 0)`);\n      this.emitDrag(event.nativeEvent);\n      return;\n    }\n\n    if (this.ngxDragLockAxis === 'x') {\n      this.updateHostStyle('top', `${this.basedOnBoundary(top, 'top')}px`);\n      this.emitDrag(event.nativeEvent);\n      return;\n    }\n\n    if (this.ngxDragLockAxis === 'y') {\n      this.updateHostStyle('left', `${this.basedOnBoundary(left, 'left')}px`);\n      this.emitDrag(event.nativeEvent);\n      return;\n    }\n\n    this.updateHostStyle('left', `${this.basedOnBoundary(left, 'left')}px`);\n    this.updateHostStyle('top', `${this.basedOnBoundary(top, 'top')}px`);\n    this.emitDrag(event.nativeEvent);\n  }\n\n  /**\n   * Updates the host style\n   */\n  private updateHostStyle(style: string, value: any): void {\n    this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n  }\n\n  /**\n   * Emits drag event to the {@link ngxDragged}\n   */\n  private emitDrag(nativeEvent?: Event): void {\n    const rect = this.elementRef.nativeElement.getBoundingClientRect();\n\n    this.ngxDragged.emit({\n      nativeEvent,\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxDragHandleDirective.html":{"url":"directives/NgxDragHandleDirective.html","title":"directive - NgxDragHandleDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgxDragHandleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/drag/drag-handle.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                The directive that allows to mark HTML element as handle of dragging element for NgxDragDirective\nSee https://angular.io/guide/angular-compiler-options#strictmetadataemit\n\n            \n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxDragHandle]\n                    \n\n\n\n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, OnDestroy, PLATFORM_ID, inject } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport {NgxDragDirective} from './drag.directive';\n\n/**\n * The directive that allows to mark HTML element as handle of dragging element for {@link NgxDragDirective}\n *\n * @author Dmytro Parfenov \n *\n * @dynamic\n * @see https://angular.io/guide/angular-compiler-options#strictmetadataemit\n */\n@Directive({ selector: '[ngxDragHandle]' })\nexport class NgxDragHandleDirective implements AfterViewInit, OnDestroy {\n  private readonly elementRef = inject>(ElementRef);\n  private readonly dragDirective = inject(NgxDragDirective, { optional: true });\n  private readonly platformId = inject(PLATFORM_ID);\n\n\n  /**\n   * @inheritDoc\n   */\n  ngAfterViewInit(): void {\n    this.observe();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngOnDestroy(): void {\n    this.observe();\n  }\n\n  /**\n   * Sets host element as observable point for {@link NgxDragDirective}\n   */\n  private observe(): void {\n    if (isPlatformServer(this.platformId) || !this.dragDirective) {\n      return;\n    }\n\n    this.dragDirective.observe(this.elementRef.nativeElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxResize.html":{"url":"interfaces/NgxResize.html","title":"interface - NgxResize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NgxResize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/resize/resize.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Boundary\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            nativeEvent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nativeEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nativeEvent:     Event\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Event\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Boundary} from '../shared/boundary/boundary';\n\nexport interface NgxResize extends Boundary {\n  nativeEvent?: Event;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxResizeHandleDirective.html":{"url":"directives/NgxResizeHandleDirective.html","title":"directive - NgxResizeHandleDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgxResizeHandleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/resize/resize-handle.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                The directive that allows to mark HTML element as one of handle of resizing element for NgxResizeDirective\nSee https://angular.io/guide/angular-compiler-options#strictmetadataemit\n\n            \n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxResizeHandle]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngxResizeHandle\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngxResizeHandle\n                    \n                \n                \n                    \n                        Type :         NgxResizeHandleType | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/lib/resize/resize-handle.directive.ts:25\n                            \n                        \n                \n                    \n                        Sets the attribute which define the side the HTML element will affect during drag\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, HostBinding, Input, OnDestroy, PLATFORM_ID, inject } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport {NgxResizeHandleType} from './resize-handle-type.enum';\nimport {NgxResizeDirective} from './resize.directive';\n\n/**\n * The directive that allows to mark HTML element as one of handle of resizing element for {@link NgxResizeDirective}\n *\n * @author Dmytro Parfenov \n *\n * @dynamic\n * @see https://angular.io/guide/angular-compiler-options#strictmetadataemit\n */\n@Directive({ selector: '[ngxResizeHandle]' })\nexport class NgxResizeHandleDirective implements AfterViewInit, OnDestroy {\n  private readonly elementRef = inject>(ElementRef);\n  private readonly platformId = inject(PLATFORM_ID);\n  private readonly resizeDirective = inject(NgxResizeDirective, { optional: true });\n\n  /**\n   * Sets the attribute which define the side the HTML element will affect during drag\n   */\n  @Input('ngxResizeHandle')\n  @HostBinding('attr.data-ngx-resize-handle-type')\n  type: NgxResizeHandleType | null = null;\n\n  /**\n   * @inheritDoc\n   */\n  ngAfterViewInit(): void {\n    if (isPlatformServer(this.platformId) || !this.resizeDirective) {\n      return;\n    }\n\n    this.resizeDirective.observe(this.elementRef.nativeElement);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngOnDestroy(): void {\n    if (!this.resizeDirective) {\n      return;\n    }\n\n    this.resizeDirective.unsubscribe(this.elementRef.nativeElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PositionBase.html":{"url":"interfaces/PositionBase.html","title":"interface - PositionBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PositionBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/core/position-base.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PositionBase {\n  x: number;\n  y: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Scale.html":{"url":"interfaces/Scale.html","title":"interface - Scale","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Scale\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/resize/scale.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            delta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        delta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Scale {\n  delta: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\n3.1.0\n\nupdate dependencies\n\n3.0.0\n\nmigrate to Angular v20\n\n2.0.2\n\nupdate dependencies\n\n2.0.1\n\nupdate dependencies\n\n2.0.0\n\nMigrate to standalone components. See Migrate an existing Angular project to standalone\n\n1.0.3\n\nupdate dependencies\n\n1.0.2\n\nupdate dependencies\ntslib: ^2.8.1\n\n\n\n1.0.1\n\nupdate peerDependencies\n@angular/common: ^19.0.0\n@angular/core: ^19.0.0\n\n\n\n1.0.0\n\nmigrate to Angular v19\nmigrate to ESLint\n\n0.0.6\n\nupdate docs\n\n0.0.5\n\nupdate docs\n\n0.0.4\n\nupdate docs\n\n0.0.3\n\ndocumentation typos\n\n0.0.2\n\nadded unit tests\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NgxResizeHandleType   (src/.../resize-handle-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/resize/resize-handle-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NgxResizeHandleType\n                    \n                \n                        \n                            \n                                 TopLeft\n                            \n                        \n                        \n                            \n                                Value : top-left\n                            \n                        \n                        \n                            \n                                 Top\n                            \n                        \n                        \n                            \n                                Value : top\n                            \n                        \n                        \n                            \n                                 TopRight\n                            \n                        \n                        \n                            \n                                Value : top-right\n                            \n                        \n                        \n                            \n                                 Right\n                            \n                        \n                        \n                            \n                                Value : right\n                            \n                        \n                        \n                            \n                                 BottomRight\n                            \n                        \n                        \n                            \n                                Value : bottom-right\n                            \n                        \n                        \n                            \n                                 Bottom\n                            \n                        \n                        \n                            \n                                Value : bottom\n                            \n                        \n                        \n                            \n                                 BottomLeft\n                            \n                        \n                        \n                            \n                                Value : bottom-left\n                            \n                        \n                        \n                            \n                                 Left\n                            \n                        \n                        \n                            \n                                Value : left\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-drag-resize\nThe Angular library provides opportunity to use drag and resize functionality on HTML element.\nDemo\nngx-drag-resize\nInstall\nNPM: npm install ngx-drag-resize --save\nYarn: yarn add ngx-drag-resize\nUsage\nEnsure your component imports all required directives.\nExample :import {\n  NgxDragDirective,\n  NgxDragHandleDirective,\n  NgxResizeDirective,\n  NgxResizeHandleDirective\n} from 'ngx-drag-resize';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  imports: [NgxResizeDirective, NgxResizeHandleDirective, NgxDragDirective, NgxDragHandleDirective]\n})\nexport class AppComponent {}Use directives within your template.\nSimple drag.\nExample :drag meInitiates only when dragging handle.\nExample :\n  drag me\n  handle\nA simple resize works only via scrolling or using two fingers on touch devices.\nExample :resize meResize using borders, and style all elements as desired.\nExample :\n  resize me\n  \n  \n  \n  \n  \n  \n  \n  \nYou can find more examples in the demo app\nDocumentation\nDocs page\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 3.1.0\n        \n            Description : The Angular library provides opportunity to use drag and resize functionality on HTML element\n        \n            Keywords : angular, ngx, drag, resize\n        \n            Homepage : https://dmytro-parfenov.github.io/ngx-drag-resize\n        \n            Bugs : https://github.com/dmytro-parfenov/ngx-drag-resize/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/dmytro-parfenov/ngx-drag-resize.git\n        \n            Author : Dmytro Parfenov\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Axis   (src/.../axis.ts)\n                        \n                        \n                            MovementNative   (src/.../movement-native.ts)\n                        \n                        \n                            PositionStrategy   (src/.../position-strategy.ts)\n                        \n                        \n                            PositionType   (src/.../position-type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/core/axis.ts\n    \n    \n        \n            \n                \n                    \n                    Axis\n                \n            \n            \n                \n                        \"x\" | \"y\" | null\n\n                \n            \n        \n    \n    src/lib/core/movement/movement-native.ts\n    \n    \n        \n            \n                \n                    \n                    MovementNative\n                \n            \n            \n                \n                        MouseEvent | TouchEvent\n\n                \n            \n        \n    \n    src/lib/drag/position-strategy.ts\n    \n    \n        \n            \n                \n                    \n                    PositionStrategy\n                \n            \n            \n                \n                        \"relative\" | \"free\"\n\n                \n            \n        \n    \n    src/lib/resize/position-type.ts\n    \n    \n        \n            \n                \n                    \n                    PositionType\n                \n            \n            \n                \n                        \"fixed\" | \"absolute\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
